{"version":3,"sources":["../node_modules/science-halt/index.js","../src/v2.ts","../src/accelerate.ts","../src/collide-circle-circle.ts","../src/collide-circle-edge.ts","../src/collision-response-aabb.ts","../src/solve-distance-constraint.ts","../src/solve-drag.ts","../src/solve-gravitation.ts","../src/inertia.ts","../src/overlap-aabb-aabb.ts","../src/overlap-circle-circle.ts","../src/segment-intersection.ts","../src/rewind-to-collision-point.ts","../src/project-point-edge.ts","../src/index.ts","aabb-overlap.ts","aabb-soup.ts","circle-collisions.ts","circle-box-collision.ts","edge-collision.ts","platformer.ts","bucket.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNM,SAAU,EAAV,CAAc,CAAd,EAA0B,CAA1B,EAAoC;AACxC,SAAO;AAAE,IAAA,CAAC,EAAE,CAAC,IAAI,CAAV;AAAa,IAAA,CAAC,EAAE,CAAC,IAAI;AAArB,GAAP;AACD;;AAEM,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,GAAD,EAAe,CAAf,EAAyB;AAC3C,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAV;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAV;AACA,SAAO,GAAP;AACD,CAJM;;;;AAMA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,GAAD,EAAe,CAAf,EAA0B,CAA1B,EAAmC;AACpD,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAR;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAR;AACA,SAAO,GAAP;AACD,CAJM;;;;AAMA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,GAAD,EAAe,CAAf,EAA2B,CAA3B,EAAqC;AACtD,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAhB;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAhB;AACA,SAAO,GAAP;AACD,CAJM;;;;AAMA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,GAAD,EAAe,CAAf,EAA2B,CAA3B,EAAqC;AACtD,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAhB;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAhB;AACA,SAAO,GAAP;AACD,CAJM;;;;AAMA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,CAAD,EAAa,CAAb,EAAuB;AAAK,SAAA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAR,GAAY,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAApB;AAAqB,CAA7D;;;;AAEA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,GAAD,EAAe,CAAf,EAA2B,MAA3B,EAAyC;AAC5D,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,MAAd;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,MAAd;AACA,SAAO,GAAP;AACD,CAJM;;;;AAMA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,EAAD,EAAc,EAAd,EAAyB;AAC/C,MAAM,CAAC,GAAG,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAApB;AACA,MAAM,CAAC,GAAG,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAApB;AACA,SAAO,IAAI,CAAC,IAAL,CAAU,CAAC,GAAC,CAAF,GAAM,CAAC,GAAC,CAAlB,CAAP;AACD,CAJM;;;;AAMA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAc,EAAd,EAAyB;AAChD,MAAM,CAAC,GAAG,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAApB;AACA,MAAM,CAAC,GAAG,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAApB;AACA,SAAO,CAAC,GAAC,CAAF,GAAM,CAAC,GAAC,CAAf;AACD,CAJM;;;;AAMA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAY;AACnC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAb;AACA,MAAM,CAAC,GAAG,EAAE,CAAC,CAAb;AACA,SAAO,IAAI,CAAC,IAAL,CAAU,CAAC,GAAC,CAAF,GAAM,CAAC,GAAC,CAAlB,CAAP;AACD,CAJM;;;;AAMA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,GAAD,EAAe,CAAf,EAAyB;AAChD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAZ;AACA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAZ;AACA,MAAI,GAAG,GAAG,CAAC,GAAC,CAAF,GAAM,CAAC,GAAC,CAAlB;;AACA,MAAI,GAAG,GAAG,CAAV,EAAa;AACX,IAAA,GAAG,GAAG,IAAI,IAAI,CAAC,IAAL,CAAU,GAAV,CAAV;AACA,IAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,GAAd;AACA,IAAA,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAC,CAAF,GAAM,GAAd;AACD;;AACD,SAAO,GAAP;AACD,CAVM;AAYP;;;;;;;;AAIO,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,GAAD,EAAe,EAAf,EAA4B,EAA5B,EAAuC;AAC3D,EAAA,GAAG,CAAC,CAAJ,GAAQ,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAlB;AACA,EAAA,GAAG,CAAC,CAAJ,GAAQ,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAlB;AACA,SAAO,SAAS,CAAC,GAAD,EAAM,GAAN,CAAhB;AACD,CAJM,EAMP;AACA;;;;;AACO,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,EAAD,EAAc,EAAd,EAAyB;AAC9C,SAAO,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAV,GAAc,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAA/B;AACD,CAFM;AAIP;;;;;;;;;;AAMO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAY;AAAE,MAAA,EAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAgB;AAAhB,IAAA,EAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACrC,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAAE,CAAC,MAAvB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,QAAM,CAAC,GAAG,EAAE,CAAC,CAAD,CAAZ;AACA,IAAA,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAH;AACD;AACF,CALM;;;;;;;;;;;AC1FP;;AAGO,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,GAAD,EAAoB,EAApB,EAAmC;AAC3D;AACA,EAAA,GAAG,CAAC,IAAJ,CAAS,CAAT,IAAc,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,EAAb,GAAkB,EAAlB,GAAuB,KAArC;AACA,EAAA,GAAG,CAAC,IAAJ,CAAS,CAAT,IAAc,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,EAAb,GAAkB,EAAlB,GAAuB,KAArC,CAH2D,CAK3D;;AACA,cAAI,GAAG,CAAC,IAAR,EAAc,CAAd,EAAiB,CAAjB;AACD,CAPM;;;;;;;;;;;ACHP;;AAGA;AACA,IAAM,IAAI,GAAG;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAAb;AACA,IAAM,IAAI,GAAG;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAAb;AACA,IAAM,IAAI,GAAG;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAAb;AACA,IAAM,IAAI,GAAG;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAAb,EAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CACjC,EADiC,EAEjC,QAFiC,EAGjC,MAHiC,EAIjC,EAJiC,EAKjC,QALiC,EAMjC,MANiC,EAOjC,eAPiC,EAQjC,OARiC,EAQlB;AAEf,MAAM,KAAK,GAAG,kBAAU,EAAE,CAAC,IAAb,EAAmB,EAAE,CAAC,IAAtB,CAAd;AACA,MAAM,MAAM,GAAG,QAAQ,GAAG,QAA1B;AACA,MAAM,IAAI,GAAG,MAAM,GAAG,MAAtB,CAJe,CAMf;;AAEA,cAAI,IAAJ,EAAU,EAAE,CAAC,IAAb,EAAmB,EAAE,CAAC,IAAtB;AACA,cAAI,IAAJ,EAAU,EAAE,CAAC,IAAb,EAAmB,EAAE,CAAC,IAAtB;AAEA,cAAI,IAAJ,EAAU,EAAE,CAAC,IAAb,EAAmB,EAAE,CAAC,IAAtB;AACA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,CAAb;AACA,MAAI,MAAM,GAAG,CAAC,IAAI,GAAG,MAAR,IAAkB,IAA/B,CAbe,CAef;;AACA,MAAI,IAAI,KAAK,CAAb,EAAgB,MAAM,GAAG,CAAT;AAEhB,MAAM,KAAK,GAAG,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,CAApC;AACA,MAAM,KAAK,GAAG,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,CAApC;AACA,MAAM,KAAK,GAAG,KAAK,GAAG,KAAtB,CApBe,CAsBf;;AACA,EAAA,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAL,GAAS,MAAT,IAAmB,KAAK,GAAG,KAA3B,CAAT;AACA,EAAA,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAL,GAAS,MAAT,IAAmB,KAAK,GAAG,KAA3B,CAAT;;AACA,MAAI,MAAM,GAAG,CAAb,EAAgB;AACd,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,IAAtB;AACD,GA3Bc,CA6Bf;;;AACA,EAAA,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAL,GAAS,MAAT,IAAmB,KAAK,GAAG,KAA3B,CAAT;AACA,EAAA,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAL,GAAS,MAAT,IAAmB,KAAK,GAAG,KAA3B,CAAT;;AACA,MAAI,MAAM,GAAG,CAAb,EAAgB;AACd,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,IAAtB;AACD;;AAED,MAAI,CAAC,eAAL,EAAsB;AAEtB,EAAA,OAAO,GAAG,OAAO,IAAI,CAArB;AAEA,MAAM,EAAE,GAAI,OAAO,IAAI,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAd,GAAkB,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAApC,CAAR,IAAmD,KAAK,IAAI,CAA5D,CAAX;AACA,MAAM,EAAE,GAAI,OAAO,IAAI,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAAd,GAAkB,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,CAApC,CAAR,IAAmD,KAAK,IAAI,CAA5D,CAAX;AAEA,EAAA,IAAI,CAAC,CAAL,IAAU,CAAC,EAAE,GAAG,IAAI,CAAC,CAAV,GAAc,EAAE,GAAG,IAAI,CAAC,CAAzB,KAA+B,KAAK,IAAI,CAAxC,CAAV,CA3Ce,CA2CuC;;AACtD,EAAA,IAAI,CAAC,CAAL,IAAU,CAAC,EAAE,GAAG,IAAI,CAAC,CAAV,GAAc,EAAE,GAAG,IAAI,CAAC,CAAzB,KAA+B,KAAK,IAAI,CAAxC,CAAV,CA5Ce,CA4CuC;;AACtD,EAAA,IAAI,CAAC,CAAL,IAAU,CAAC,EAAE,GAAG,IAAI,CAAC,CAAV,GAAc,EAAE,GAAG,IAAI,CAAC,CAAzB,KAA+B,KAAK,IAAI,CAAxC,CAAV,CA7Ce,CA6CuC;;AACtD,EAAA,IAAI,CAAC,CAAL,IAAU,CAAC,EAAE,GAAG,IAAI,CAAC,CAAV,GAAc,EAAE,GAAG,IAAI,CAAC,CAAzB,KAA+B,KAAK,IAAI,CAAxC,CAAV,CA9Ce,CA8CuC;;AAEtD,MAAI,MAAM,GAAG,CAAb,EAAgB,YAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,IAAI,CAAC,CAA9B,EAAiC,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,IAAI,CAAC,CAAlD;AAChB,MAAI,MAAM,GAAG,CAAb,EAAgB,YAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,IAAI,CAAC,CAA9B,EAAiC,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,IAAI,CAAC,CAAlD;AACjB,CA1DM;;;;;;;;;;;AClBP;;AAaA;;AAGA;AACA,IAAM,OAAO,GAAG,YAAhB;AACA,IAAM,IAAI,GAAG,YAAb;AACA,IAAM,QAAQ,GAAG,YAAjB;AACA,IAAM,IAAI,GAAG,YAAb;AACA,IAAM,MAAM,GAAG,YAAf;AACA,IAAM,UAAU,GAAG,YAAnB;AACA,IAAM,cAAc,GAAG,YAAvB;AACA,IAAM,WAAW,GAAG,YAApB;AAEA,IAAM,EAAE,GAAG;AACT,EAAA,IAAI,EAAE,YADG;AAET,EAAA,IAAI,EAAE;AAFG,CAAX;AAKA,IAAM,QAAQ,GAAG;AACf,EAAA,IAAI,EAAE,YADS;AAEf,EAAA,IAAI,EAAE;AAFS,CAAjB;;AAKM,SAAU,iBAAV,CACJ,MADI,EAEJ,OAFI,EAGJ,KAHI,EAIJ,SAJI,EAKJ,KALI,EAMJ,SANI,EAOJ,KAPI,EAQJ,eARI,EASJ,OATI,EASW;AAEf;AACA,cAAI,IAAJ,EAAU,SAAS,CAAC,IAApB,EAA0B,SAAS,CAAC,IAApC,EAHe,CAKf;;AACA,oBAAU,OAAV,EAAmB,IAAnB,EANe,CAQf;;AACA,cAAI,IAAJ,EAAU,MAAM,CAAC,IAAjB,EAAuB,SAAS,CAAC,IAAjC,EATe,CAWf;AACA;;AACA,MAAM,UAAU,GAAG,YAAI,IAAJ,EAAU,IAAV,CAAnB;AACA,MAAM,MAAM,GAAG,YAAI,IAAJ,EAAU,IAAV,CAAf;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,MAAV,CAAhB,CAfe,CAiBf;;AACA,MAAI,UAAU,GAAG,CAAb,IAAkB,UAAU,GAAG,MAAnC,EAA2C,OAlB5B,CAoBf;AACA;;AACA,MAAM,CAAC,GAAG,UAAU,GAAG,MAAvB;AACA,MAAM,CAAC,GAAG,IAAI,CAAd,CAvBe,CAyBf;;AACA,gBAAM,cAAN,EAAsB,OAAtB,EAA+B,CAAC,GAAG,OAAnC;AACA,cAAI,cAAJ,EAAoB,cAApB,EAAoC,SAAS,CAAC,IAA9C;AACA,MAAM,IAAI,GAAG,iBAAS,cAAT,EAAyB,MAAM,CAAC,IAAhC,CAAb,CA5Be,CA8Bf;;AACA,MAAI,IAAI,GAAG,OAAX,EAAoB,OA/BL,CAiCf;AACA;;AAEA,MAAM,YAAY,GAAG,CAAC,GAAG,KAAzB;AACA,MAAM,YAAY,GAAG,CAAC,GAAG,KAAzB;AAEA,MAAM,QAAQ,GAAG;AACf,IAAA,IAAI,EAAE,YADS;AAEf,IAAA,IAAI,EAAE;AAFS,GAAjB;AAKA,MAAM,QAAQ,GAAG;AACf,IAAA,IAAI,EAAE,YADS;AAEf,IAAA,IAAI,EAAE;AAFS,GAAjB,CA5Ce,CAiDf;;AACA,gBAAM,QAAQ,CAAC,IAAf,EAAqB,OAArB,EAA8B,CAAC,GAAG,OAAlC;AACA,cAAI,QAAQ,CAAC,IAAb,EAAmB,MAAM,CAAC,IAA1B,EAAgC,QAAQ,CAAC,IAAzC;AACA,gBAAM,QAAQ,CAAC,IAAf,EAAqB,OAArB,EAA8B,CAAC,GAAG,OAAlC;AACA,cAAI,QAAQ,CAAC,IAAb,EAAmB,MAAM,CAAC,IAA1B,EAAgC,QAAQ,CAAC,IAAzC,EArDe,CAuDf;;AACA,gBAAM,QAAQ,CAAC,IAAf,EAAqB,OAArB,EAA8B,CAAC,GAAG,OAAlC;AACA,cAAI,QAAQ,CAAC,IAAb,EAAmB,MAAM,CAAC,IAA1B,EAAgC,QAAQ,CAAC,IAAzC;AACA,gBAAM,QAAQ,CAAC,IAAf,EAAqB,OAArB,EAA8B,CAAC,GAAG,OAAlC;AACA,cAAI,QAAQ,CAAC,IAAb,EAAmB,MAAM,CAAC,IAA1B,EAAgC,QAAQ,CAAC,IAAzC;AAEA,MAAM,cAAc,GAAG;AACrB,IAAA,IAAI,EAAE,YADe;AAErB,IAAA,IAAI,EAAE;AAFe,GAAvB;AAKA,MAAM,cAAc,GAAG;AACrB,IAAA,IAAI,EAAE,YADe;AAErB,IAAA,IAAI,EAAE;AAFe,GAAvB,CAlEe,CAuEf;;AACA,eAAK,cAAc,CAAC,IAApB,EAA0B,QAAQ,CAAC,IAAnC;AACA,eAAK,cAAc,CAAC,IAApB,EAA0B,QAAQ,CAAC,IAAnC;AACA,eAAK,cAAc,CAAC,IAApB,EAA0B,QAAQ,CAAC,IAAnC;AACA,eAAK,cAAc,CAAC,IAApB,EAA0B,QAAQ,CAAC,IAAnC;AAEA,MAAM,UAAU,GAAG,CAAnB,CA7Ee,CA+Ef;;AACA,gDACE,QADF,EAEE,OAFF,EAGE,YAHF,EAIE,SAJF,EAKE,UALF,EAME,KANF,EAOE,eAPF,EAQE,OARF;AAWA,gDACE,QADF,EAEE,OAFF,EAGE,YAHF,EAIE,SAJF,EAKE,UALF,EAME,KANF,EAOE,eAPF,EAQE,OARF;AAWA,MAAM,aAAa,GAAG;AACpB,IAAA,IAAI,EAAE,YADc;AAEpB,IAAA,IAAI,EAAE;AAFc,GAAtB;AAKA,MAAM,aAAa,GAAG;AACpB,IAAA,IAAI,EAAE,YADc;AAEpB,IAAA,IAAI,EAAE;AAFc,GAAtB,CA3Ge,CAgHf;;AACA,cAAI,aAAa,CAAC,IAAlB,EAAwB,QAAQ,CAAC,IAAjC,EAAuC,cAAc,CAAC,IAAtD,EAjHe,CAmHf;;AACA,cAAI,aAAa,CAAC,IAAlB,EAAwB,QAAQ,CAAC,IAAjC,EAAuC,cAAc,CAAC,IAAtD;AAEA,gBAAM,aAAa,CAAC,IAApB,EAA0B,aAAa,CAAC,IAAxC,EAA8C,CAA9C;AACA,gBAAM,aAAa,CAAC,IAApB,EAA0B,aAAa,CAAC,IAAxC,EAA8C,CAA9C,EAvHe,CAyHf;;AACA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,aAAa,CAAC,IAA5C;AACA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,aAAa,CAAC,IAA5C;AAEA,MAAI,CAAC,eAAL,EAAsB,OA7HP,CA+Hf;AACA;AACA;AAEA;;AACA,cAAI,aAAa,CAAC,IAAlB,EAAwB,QAAQ,CAAC,IAAjC,EAAuC,cAAc,CAAC,IAAtD,EApIe,CAsIf;;AACA,cAAI,aAAa,CAAC,IAAlB,EAAwB,QAAQ,CAAC,IAAjC,EAAuC,cAAc,CAAC,IAAtD;AAEA,gBAAM,aAAa,CAAC,IAApB,EAA0B,aAAa,CAAC,IAAxC,EAA8C,CAA9C;AACA,gBAAM,aAAa,CAAC,IAApB,EAA0B,aAAa,CAAC,IAAxC,EAA8C,CAA9C,EA1Ie,CA4If;;AACA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,aAAa,CAAC,IAA5C;AACA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,aAAa,CAAC,IAA5C;AACD;;AAOD,SAAS,aAAT,CACE,IADF,EAEE,SAFF,EAGE,MAHF,EAGkC;AADhC,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,EAAA;AAA0B;;AAC1B,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,EAAA;AAAgC;;AAEhC,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B,EAJgC,CAKhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAZ;AACA,EAAA,GAAG,CAAC,MAAJ,GAAa,GAAb;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzC,QAAM,QAAQ,GAAG,SAAS,CAAC,CAAD,CAA1B;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,sBAAhB;AACA,IAAA,GAAG,CAAC,SAAJ;AACA,IAAA,GAAG,CAAC,GAAJ,CACE,QAAQ,CAAC,IAAT,CAAc,CADhB,EAEE,QAAQ,CAAC,IAAT,CAAc,CAFhB,EAGE,QAAQ,CAAC,MAHX,EAIE,CAJF,EAKE,IAAI,CAAC,EAAL,GAAU,CALZ,EAME,KANF;AAQA,IAAA,GAAG,CAAC,IAAJ;AAEA,IAAA,GAAG,CAAC,SAAJ,GAAgB,oBAAhB;AACA,IAAA,GAAG,CAAC,SAAJ;AACA,IAAA,GAAG,CAAC,GAAJ,CACE,QAAQ,CAAC,IAAT,CAAc,CADhB,EAEE,QAAQ,CAAC,IAAT,CAAc,CAFhB,EAGE,QAAQ,CAAC,MAHX,EAIE,CAJF,EAKE,IAAI,CAAC,EAAL,GAAU,CALZ,EAME,KANF;AAQA,IAAA,GAAG,CAAC,IAAJ;AACD;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AAChC,QAAA,EAAA,GAAgB,MAAM,CAAC,CAAD,CAAtB;AAAA,QAAC,MAAI,GAAA,EAAA,CAAA,CAAA,CAAL;AAAA,QAAO,KAAK,GAAA,EAAA,CAAA,CAAA,CAAZ;AACN,IAAA,GAAG,CAAC,SAAJ,GAAgB,QAAhB;AACA,IAAA,GAAG,CAAC,QAAJ,CAAa,KAAK,CAAC,CAAnB,EAAsB,KAAK,CAAC,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACA,IAAA,GAAG,CAAC,QAAJ,CAAgB,MAAI,GAAA,IAAJ,GAAS,KAAK,CAAC,CAAf,GAAgB,GAAhB,GAAoB,KAAK,CAAC,CAA1B,GAA2B,GAA3C,EAAgD,KAAK,CAAC,CAAN,GAAU,CAA1D,EAA6D,KAAK,CAAC,CAAN,GAAU,CAAvE;AACD,GAjF+B,CAmFhC;;;AACA,EAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,EAAA,GAAG,CAAC,QAAJ,CAAa,IAAb,EAAmB,EAAnB,EAAuB,EAAvB;AACD;;;;;;;;;AC5RD;;AAaA;AAEA,IAAM,KAAK,GAAG,YAAd;AACA,IAAM,QAAQ,GAAG,YAAjB;AAEA,IAAM,IAAI,GAAG,YAAb;AACA,IAAM,KAAK,GAAG,YAAd;AACA,IAAM,KAAK,GAAG,YAAd;AAEA,IAAM,IAAI,GAAG,YAAb;AACA,IAAM,KAAK,GAAG,YAAd;AACA,IAAM,KAAK,GAAG,YAAd;AAEA,IAAM,OAAO,GAAG,YAAhB;AACA,IAAM,OAAO,GAAG,YAAhB;AAEA,IAAM,EAAE,GAAG,YAAX;AACA,IAAM,EAAE,GAAG,YAAX;AAEA,IAAM,EAAE,GAAG,YAAX;AACA,IAAM,EAAE,GAAG,YAAX,EAEA;;AACA,IAAM,OAAO,GAAG,MAAhB,EAEA;AAEA;AACA;AACA;;AAEO,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CACnC,KADmC,EAEnC,KAFmC,EAGnC,KAHmC,EAInC,YAJmC,EAKnC,eALmC,EAMnC,gBANmC,EAOnC,KAPmC,EAQnC,KARmC,EASnC,KATmC,EAUnC,YAVmC,EAWnC,eAXmC,EAYnC,gBAZmC,EAanC,eAbmC,EAcnC,OAdmC,EAenC,OAfmC,EAenB;AAEhB;AACA,cAAI,KAAJ,EAAW,CAAX,EAAc,CAAd;AACA,cAAI,QAAJ,EAAc,CAAd,EAAiB,CAAjB;AACA,cAAI,IAAJ,EAAU,CAAV,EAAa,CAAb;AACA,cAAI,KAAJ,EAAW,CAAX,EAAc,CAAd;AACA,cAAI,KAAJ,EAAW,CAAX,EAAc,CAAd;AACA,cAAI,IAAJ,EAAU,CAAV,EAAa,CAAb;AACA,cAAI,KAAJ,EAAW,CAAX,EAAc,CAAd;AACA,cAAI,KAAJ,EAAW,CAAX,EAAc,CAAd;AACA,cAAI,OAAJ,EAAa,CAAb,EAAgB,CAAhB;AACA,cAAI,OAAJ,EAAa,CAAb,EAAgB,CAAhB;AACA,cAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX;AACA,cAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX;AACA,cAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX;AACA,cAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAhBgB,CAkBhB;AACA;AACA;;AACA,MAAI,eAAe,KAAK,eAAe,CAAC,CAAhB,KAAsB,CAAtB,IAA2B,eAAe,CAAC,CAAhB,KAAsB,CAAtD,CAAnB,EAA6E;AAC3E,gBAAI,KAAJ,EAAW,eAAe,CAAC,CAA3B,EAA8B,eAAe,CAAC,CAA9C;AACD,GAFD,MAEO;AACL,gBAAI,KAAJ,EAAW,KAAX,EAAkB,KAAlB;AACA,sBAAU,KAAV,EAAiB,KAAjB;AACD;;AAED,gBAAM,QAAN,EAAgB,KAAhB,EAAuB,CAAC,CAAxB,EA5BgB,CA8BhB;AACA;AACA;AACA;;AACA,MAAM,WAAW,GAAG,YAAY,GAAG,YAAf,GAA8B,YAA9B,GAA6C,YAAjE;AACA,MAAM,SAAS,GAAG,KAAK,GAAG,KAA1B;AACA,MAAM,CAAC,GAAG,IAAI,WAAd,CApCgB,CAsChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,cAAI,IAAJ,EAAU,KAAV,EAAiB,KAAjB;AACA,MAAM,EAAE,GAAG,YAAI,KAAJ,EAAW,IAAX,CAAX;AACA,gBAAM,KAAN,EAAa,KAAb,EAAoB,EAApB;AACA,cAAI,KAAJ,EAAW,IAAX,EAAiB,KAAjB,EAxDgB,CA0DhB;;AACA,cAAI,IAAJ,EAAU,KAAV,EAAiB,KAAjB;AACA,MAAM,EAAE,GAAG,YAAI,QAAJ,EAAc,IAAd,CAAX;AACA,gBAAM,KAAN,EAAa,QAAb,EAAuB,EAAvB;AACA,cAAI,KAAJ,EAAW,IAAX,EAAiB,KAAjB,EA9DgB,CAgEhB;;AACA,gBAAM,EAAN,EAAU,KAAV,EAAiB,CAAC,KAAK,GAAG,KAAT,IAAkB,SAAnC;AACA,gBAAM,EAAN,EAAU,KAAV,EAAkB,CAAC,GAAG,KAAL,GAAc,SAA/B;AACA,cAAI,OAAJ,EAAa,EAAb,EAAiB,EAAjB;AACA,cAAI,OAAJ,EAAa,OAAb,EAAsB,KAAtB,EApEgB,CAsEhB;;AACA,gBAAM,EAAN,EAAU,KAAV,EAAkB,CAAC,GAAG,KAAL,GAAc,SAA/B;AACA,gBAAM,EAAN,EAAU,KAAV,EAAiB,CAAC,KAAK,GAAG,KAAT,IAAkB,SAAnC;AACA,cAAI,OAAJ,EAAa,EAAb,EAAiB,EAAjB;AACA,cAAI,OAAJ,EAAa,OAAb,EAAsB,KAAtB,EA1EgB,CA4EhB;;AACA,MAAM,EAAE,GAAG,YAAI,YAAJ,EAAU,OAAV,EAAmB,OAAnB,CAAX,CA7EgB,CA+EhB;;AACA,MAAM,IAAI,GAAG,YAAb;AACA,gBAAM,IAAN,EAAY,KAAZ,EAAmB,YAAI,EAAJ,EAAQ,KAAR,CAAnB;AACA,MAAM,OAAO,GAAG,YAAI,YAAJ,EAAU,EAAV,EAAc,IAAd,CAAhB;AACA,oBAAU,OAAV,EAAmB,OAAnB,EAnFgB,CAqFhB;;AACA,MAAI,EAAE,GAAG,CAAC,YAAI,EAAJ,EAAQ,OAAR,CAAV;AACA,EAAA,EAAE,IAAI,KAAK,KAAK,GAAG,KAAb,CAAN,CAvFgB,CAuFW;AAC3B;;AAEA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,CAAd,CA1FgB,CA4FhB;;AACA,MAAI,KAAK,GAAG,OAAZ,EAAqB;AACnB;AACA,QAAM,QAAQ,GAAG,kBAAU,KAAV,CAAjB;AACA,QAAM,QAAQ,GAAG,kBAAU,KAAV,CAAjB,CAHmB,CAKnB;;AACA,QAAM,gBAAgB,GAAG,YAAzB;AACA,QAAM,gBAAgB,GAAG,YAAzB,CAPmB,CASnB;AACA;AACA;AACA;;AAEA,QAAI,KAAK,GAAG,QAAQ,GAAG,eAAvB,EAAwC;AACtC,oBAAM,gBAAN,EAAwB,OAAxB,EAAiC,eAAjC;AACD,KAFD,MAEO;AACL,oBAAM,gBAAN,EAAwB,OAAxB,EAAiC,CAAC,QAAD,GAAY,gBAA7C;AACD;;AAED,QAAI,KAAK,GAAG,QAAQ,GAAG,eAAvB,EAAwC;AACtC,oBAAM,gBAAN,EAAwB,OAAxB,EAAiC,eAAjC;AACD,KAFD,MAEO;AACL,oBAAM,gBAAN,EAAwB,OAAxB,EAAiC,CAAC,QAAD,GAAY,gBAA7C;AACD;;AAED,gBAAI,OAAJ,EAAa,OAAb,EAAsB,gBAAtB;AACA,gBAAI,OAAJ,EAAa,OAAb,EAAsB,gBAAtB;AACD,GAzHe,CA2HhB;;;AACA,eAAK,OAAL,EAAc,OAAd;AACA,eAAK,OAAL,EAAc,OAAd;AACD,CA7IM;;;;;;;;;;;AC5CP;;AAGA;AACM,SAAU,uBAAV,CACJ,EADI,EAEJ,MAFI,EAGJ,EAHI,EAIJ,MAJI,EAKJ,IALI,EAMJ;AACA,SAPI,EAOiB;AAArB,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAqB;;AAErB,MAAM,KAAK,GAAG,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,CAApC;AACA,MAAM,KAAK,GAAG,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,CAApC;AACA,MAAM,MAAM,GAAG,KAAK,KAAK,IAAI,CAAd,CAAf;AACA,MAAM,MAAM,GAAG,KAAK,KAAK,IAAI,CAAd,CAAf;AACA,MAAM,KAAK,GAAG,MAAM,GAAG,MAAvB,CANqB,CAQrB;;AACA,MAAM,KAAK,GAAG,YAAI,YAAJ,EAAU,EAAE,CAAC,IAAb,EAAmB,EAAE,CAAC,IAAtB,CAAd;AACA,MAAM,QAAQ,GAAG,kBAAU,KAAV,CAAjB,CAVqB,CAYrB;;AACA,MAAI,QAAQ,KAAK,CAAjB,EAAoB,OAbC,CAerB;;AACA,MAAM,IAAI,GAAG,CAAC,QAAQ,GAAG,IAAZ,IAAoB,QAAjC,CAhBqB,CAkBrB;AACA;;AACA,gBAAM,KAAN,EAAa,KAAb,EAAoB,IAAI,GAAG,KAA3B,EApBqB,CAsBrB;;AACA,MAAM,YAAY,GAAG,cAAM,YAAN,EAAY,KAAZ,EAAmB,MAAM,GAAG,SAA5B,CAArB;AACA,MAAM,YAAY,GAAG,cAAM,YAAN,EAAY,KAAZ,EAAmB,MAAM,GAAG,SAA5B,CAArB,CAxBqB,CA0BrB;AACA;;AACA,MAAI,MAAM,GAAG,CAAb,EAAgB;AACd,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,YAAtB;AACD,GAFD,MAEO,IAAI,MAAM,GAAG,CAAb,EAAgB;AACrB,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,YAAtB;AACD,GAhCoB,CAkCrB;AACA;;;AACA,MAAI,MAAM,GAAG,CAAb,EAAgB;AACd,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,YAAtB;AACD,GAFD,MAEO,IAAI,MAAM,GAAG,CAAb,EAAgB;AACrB,gBAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,YAAtB;AACD;AACF;;;;;;;;;AClDM,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAwB,IAAxB,EAAoC;AAC3D,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAArB,IAA0B,IAApC;AACA,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAArB,IAA0B,IAApC;AACA,EAAA,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,CAAxB;AACA,EAAA,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,CAAxB;AACD,CALM;;;;;;;;;;;ACFP;;AAEA,IAAM,MAAM,GAAG,YAAf;;AAEM,SAAU,gBAAV,CACJ,EADI,EAEJ,MAFI,EAGJ,EAHI,EAIJ,MAJI,EAKJ,eALI,EAKkB;AAAtB,MAAA,eAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,IAAA;AAAsB,GAAA,CAEtB;;;AACA,MAAI,MAAM,IAAI,CAAV,IAAe,MAAM,IAAI,CAA7B,EAAgC;AAEhC,MAAI,GAAJ;AACA,MAAI,MAAJ;AAEA,MAAM,KAAK,GAAG,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAAlC;AACA,MAAM,KAAK,GAAG,EAAE,CAAC,IAAH,CAAQ,CAAR,GAAY,EAAE,CAAC,IAAH,CAAQ,CAAlC;AAEA,cAAI,MAAJ,EAAY,KAAZ,EAAmB,KAAnB;AACA,EAAA,GAAG,GAAG,kBAAU,MAAV,CAAN,CAZsB,CActB;;AACA,EAAA,GAAG,GAAG,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgB,GAAtB,CAfsB,CAiBtB;;AACA,EAAA,MAAM,GAAG,eAAe,IAAK,MAAM,GAAG,MAAV,IAAqB,GAAG,GAAG,GAA3B,CAAJ,CAAxB,CAlBsB,CAoBtB;;AACA,oBAAU,MAAV,EAAkB,MAAlB;AACA,gBAAM,MAAN,EAAc,MAAd,EAAsB,MAAtB,EAtBsB,CAwBtB;;AACA,cAAI,EAAE,CAAC,IAAP,EAAa,EAAE,CAAC,IAAhB,EAAsB,MAAtB;AACD;;;;;;;;;ACnCD;;AAGO,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,GAAD,EAAkB;AACvC,MAAM,CAAC,GAAG,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,CAAb,GAAiB,GAAG,CAAC,IAAJ,CAAS,CAApC;AACA,MAAM,CAAC,GAAG,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,CAAb,GAAiB,GAAG,CAAC,IAAJ,CAAS,CAApC;AAEA,cAAI,GAAG,CAAC,IAAR,EAAc,GAAG,CAAC,IAAJ,CAAS,CAAvB,EAA0B,GAAG,CAAC,IAAJ,CAAS,CAAnC;AACA,cAAI,GAAG,CAAC,IAAR,EAAc,CAAd,EAAiB,CAAjB;AACD,CANM;;;;;;;;;;;ACHP;;AAYA;;;;;;AAMO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAC7B,QAD6B,EACX,QADW,EACO,MADP,EACuB,OADvB,EAE7B,QAF6B,EAEX,QAFW,EAEO,MAFP,EAEuB,OAFvB,EAG7B,MAH6B,EAGJ;AAGzB,MAAM,EAAE,GAAG,QAAQ,GAAG,QAAtB;AACA,MAAM,EAAE,GAAI,MAAM,GAAG,CAAV,GAAgB,MAAM,GAAG,CAAzB,GAA8B,IAAI,CAAC,GAAL,CAAS,EAAT,CAAzC;AACA,MAAM,EAAE,GAAG,QAAQ,GAAG,QAAtB;AACA,MAAM,EAAE,GAAI,OAAO,GAAG,CAAX,GAAiB,OAAO,GAAG,CAA3B,GAAgC,IAAI,CAAC,GAAL,CAAS,EAAT,CAA3C;AAEA,MAAI,EAAE,IAAI,CAAV,EAAa,OAAO,IAAP;AACb,MAAI,EAAE,IAAI,CAAV,EAAa,OAAO,IAAP;AAEb,cAAI,MAAM,CAAC,OAAX,EAAoB,CAApB,EAAuB,CAAvB;AACA,cAAI,MAAM,CAAC,MAAX,EAAmB,CAAnB,EAAsB,CAAtB;AACA,cAAI,MAAM,CAAC,MAAX,EAAmB,CAAnB,EAAsB,CAAtB;;AAEA,MAAI,EAAE,GAAG,EAAT,EAAa;AACX,QAAM,EAAE,GAAG,EAAE,GAAG,CAAL,GAAS,CAAC,CAAV,GAAc,CAAzB;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,CAAf,GAAmB,EAAE,GAAG,EAAxB;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,EAAlB,CAHW,CAIX;;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,QAAQ,GAAI,MAAM,GAAG,CAAT,GAAa,EAA3C;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,QAAlB;AACD,GAPD,MAOO;AACL,QAAM,EAAE,GAAG,EAAE,GAAG,CAAL,GAAS,CAAC,CAAV,GAAc,CAAzB;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,CAAf,GAAmB,EAAE,GAAG,EAAxB;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,EAAlB,CAHK,CAIL;;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,QAAlB;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,CAAd,GAAkB,QAAQ,GAAI,OAAO,GAAG,CAAV,GAAc,EAA5C;AACD;;AAED,SAAO,MAAP;AACD,CAnCM;;;;;;;;;;;AClBA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CACjC,EADiC,EAEjC,EAFiC,EAGjC,IAHiC,EAIjC,EAJiC,EAKjC,EALiC,EAMjC,IANiC,EAMrB;AAEZ,MAAM,CAAC,GAAG,EAAE,GAAG,EAAf;AACA,MAAM,CAAC,GAAG,EAAE,GAAG,EAAf;AACA,MAAM,GAAG,GAAG,IAAI,GAAG,IAAnB;AACA,SAAO,CAAC,GAAG,CAAJ,GAAQ,CAAC,GAAG,CAAZ,GAAgB,GAAG,GAAG,GAA7B;AACD,CAZM;;;;;;;;;;;ACAP;;AAEA,IAAM,EAAE,GAAG,YAAX;AACA,IAAM,EAAE,GAAG,YAAX;;AAEM,SAAU,mBAAV,CACJ,EADI,EAEJ,EAFI,EAGJ,EAHI,EAIJ,EAJI,EAKJ,iBALI,EAKsB;AAE1B,cAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;AACA,cAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;AAEA,MAAM,CAAC,GACL,CAAC,CAAC,EAAE,CAAC,CAAJ,IAAS,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAnB,IAAwB,EAAE,CAAC,CAAH,IAAQ,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAlB,CAAzB,KACC,CAAC,EAAE,CAAC,CAAJ,GAAQ,EAAE,CAAC,CAAX,GAAe,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAD1B,CADF;AAGA,MAAM,CAAC,GACL,CAAC,EAAE,CAAC,CAAH,IAAQ,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAlB,IAAuB,EAAE,CAAC,CAAH,IAAQ,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAAlB,CAAxB,KACC,CAAC,EAAE,CAAC,CAAJ,GAAQ,EAAE,CAAC,CAAX,GAAe,EAAE,CAAC,CAAH,GAAO,EAAE,CAAC,CAD1B,CADF;;AAIA,MAAI,CAAC,IAAI,CAAL,IAAU,CAAC,IAAI,CAAf,IAAoB,CAAC,IAAI,CAAzB,IAA8B,CAAC,IAAI,CAAvC,EAA0C;AACxC;AACA,IAAA,iBAAiB,CAAC,CAAlB,GAAsB,EAAE,CAAC,CAAH,GAAO,CAAC,GAAG,EAAE,CAAC,CAApC;AACA,IAAA,iBAAiB,CAAC,CAAlB,GAAsB,EAAE,CAAC,CAAH,GAAO,CAAC,GAAG,EAAE,CAAC,CAApC;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;;;;;;;;AC9BD;;AACA;;AAGA,IAAM,WAAW,GAAG,YAApB;AACA,IAAM,MAAM,GAAG,YAAf;AAEA,IAAM,CAAC,GAAG,YAAV;AACA,IAAM,SAAS,GAAG,YAAlB;AACA,IAAM,aAAa,GAAG,YAAtB;AACA,IAAM,mBAAmB,GAAG,YAA5B;;AAEM,SAAU,sBAAV,CACJ,MADI,EAEJ,OAFI,EAGJ,MAHI,EAIJ,MAJI,EAIgB;AAEpB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,cAAI,CAAJ,EAAO,MAAM,CAAC,IAAd,EAAoB,MAAM,CAAC,IAA3B;AACA,oBAAU,SAAV,EAAqB,CAArB;AACA,gBAAM,aAAN,EAAqB,SAArB,EAAgC,OAAhC;AACA,cAAI,mBAAJ,EAAyB,aAAzB,EAAwC,MAAM,CAAC,IAA/C;AAEA,MAAM,WAAW,GAAG,8CAClB,mBADkB,EAElB,MAAM,CAAC,IAFW,EAGlB,MAAM,CAAC,IAHW,EAIlB,MAAM,CAAC,IAJW,EAKlB,WALkB,CAApB;AAQA,MAAI,CAAC,WAAL,EAAkB,OAAO,KAAP,CA3BE,CA6BpB;;AACA,cAAI,MAAJ,EAAY,mBAAZ,EAAiC,WAAjC;AAEA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,MAA9B;AACA,cAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,MAA9B;AACA,SAAO,IAAP;AACD;;AAED,SAAS,aAAT,CAAuB,KAAvB,EAAqC;AACnC,MAAI,KAAK,CAAC,KAAK,CAAC,CAAP,CAAL,IAAkB,KAAK,CAAC,KAAK,CAAC,CAAP,CAA3B,EAAsC;AACpC;AACD;AACF;;;;;;;;;;;;;;;ACzDD;;AA4BA,IAAM,SAAS,GAAG,YAAlB;AACA,IAAM,IAAI,GAAG,YAAb;;AAEM,SAAU,gBAAV,CACJ,KADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,MAJI,EAIuB;AAE3B,cAAI,SAAJ,EAAe,SAAf,EAA0B,SAA1B;;AACA,MAAI,SAAS,CAAC,CAAV,KAAgB,CAAhB,IAAqB,SAAS,CAAC,CAAV,KAAgB,CAAzC,EAA4C;AAC1C,UAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACD,GAL0B,CAO3B;AACA;;;AACA,MAAM,CAAC,GACL,CAAC,CAAC,KAAK,CAAC,CAAN,GAAU,SAAS,CAAC,CAArB,IAA0B,SAAS,CAAC,CAApC,GAAwC,CAAC,KAAK,CAAC,CAAN,GAAU,SAAS,CAAC,CAArB,IAA0B,SAAS,CAAC,CAA7E,KACC,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAAxB,GAA4B,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CADrD,CADF;AAIA,EAAA,MAAM,CAAC,CAAP,GAAW,CAAX;AAEA,MAAM,IAAI,GAAG,YACX,MAAM,CAAC,cADI,EAEX,SAAS,CAAC,CAAV,GAAc,CAAC,GAAG,SAAS,CAAC,CAFjB,EAGX,SAAS,CAAC,CAAV,GAAc,CAAC,GAAG,SAAS,CAAC,CAHjB,CAAb;AAMA,EAAA,MAAM,CAAC,QAAP,GAAkB,iBAAS,IAAT,EAAe,KAAf,CAAlB,CArB2B,CAuB3B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM,QAAQ,GAAG,eAAO,MAAM,CAAC,UAAd,EAA0B,SAA1B,EAAqC,SAArC,CAAjB;AACA,cAAI,IAAJ,EAAU,KAAV,EAAiB,IAAjB;AACA,EAAA,MAAM,CAAC,UAAP,GAAoB,YAAI,QAAJ,EAAc,IAAd,CAApB;AACD;;;;;;;;AC9DD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACpBA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAYa,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAEA,MAAM,IAAI,GAAG;AACX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,EAAR,CADK;AAEX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,EAAR,CAFK;AAGX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,EAHK;AAIX,IAAA,CAAC,EAAE,GAJQ;AAKX,IAAA,CAAC,EAAE,GALQ;AAMX,IAAA,IAAI,EAAE;AANK,GAAb;AASA,MAAM,IAAI,GAAG;AACX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CADK;AAEX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAFK;AAGX,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,EAHK;AAIX,IAAA,CAAC,EAAE,GAJQ;AAKX,IAAA,CAAC,EAAE,GALQ;AAMX,IAAA,IAAI,EAAE;AANK,GAAb;AAWA,MAAM,MAAM,GAAU,EAAtB;AACA,MAAM,SAAS,GAAsB;AACnC,IAAA,OAAO,EAAE,KAAA,CAAA,EAAA,EAD0B;AAEnC,IAAA,MAAM,EAAE,KAAA,CAAA,EAAA,EAF2B;AAGnC,IAAA,MAAM,EAAE,KAAA,CAAA,EAAA;AAH2B,GAArC;AAMA,EAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,IAAlB;AAEA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,EAAE,GAAG,CAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,MAAA,KAAA,CAAA,UAAA,CAAW,KAAX,EAAkB,EAAlB;AACD;;AAED,QAAM,aAAa,GAAG,KAAA,CAAA,eAAA,CACpB,IAAI,CAAC,IAAL,CAAU,CADU,EAEpB,IAAI,CAAC,IAAL,CAAU,CAFU,EAGpB,IAAI,CAAC,CAHe,EAIpB,IAAI,CAAC,CAJe,EAKpB,IAAI,CAAC,IAAL,CAAU,CALU,EAMpB,IAAI,CAAC,IAAL,CAAU,CANU,EAOpB,IAAI,CAAC,CAPe,EAQpB,IAAI,CAAC,CARe,EASpB,SAToB,CAAtB;;AAYA,QAAI,aAAJ,EAAmB;AACjB;AACA,MAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN,CAFiB,CAIjB;;AACA,UAAM,WAAW,GAAG,KAAA,CAAA,KAAA,CAAM,KAAA,CAAA,EAAA,EAAN,EAAY,SAAS,CAAC,OAAtB,EAA+B,GAA/B,CAApB;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B,EATiB,CAWjB;;AACA,MAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AAEA,UAAM,KAAK,GAAG,KAAA,CAAA,EAAA,EAAd;AACA,UAAM,KAAK,GAAG,KAAA,CAAA,EAAA,EAAd;AAEA,UAAM,WAAW,GAAG,CAApB;AACA,UAAM,cAAc,GAAG,GAAvB;AACA,UAAM,eAAe,GAAG,IAAxB;AAEA,MAAA,KAAA,CAAA,qBAAA,CACE,IAAI,CAAC,IADP,EAEE,IAAI,CAAC,IAFP,EAGE,IAAI,CAAC,IAHP,EAIE,WAJF,EAKE,cALF,EAME,eANF,EAOE,IAAI,CAAC,IAPP,EAQE,IAAI,CAAC,IARP,EASE,IAAI,CAAC,IATP,EAUE,WAVF,EAWE,cAXF,EAYE,eAZF,EAaE;AACA;AACA;AACA;AACA,MAAA,KAAA,CAAA,EAAA,EAjBF,EAkBE,KAlBF,EAmBE,KAnBF,EArBiB,CA2CjB;;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,KAA1B;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,KAA1B,EA7CiB,CA+CjB;;AACA,MAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,MAAA,KAAA,CAAA,OAAA,CAAQ,KAAR;AACD;;AAED,IAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GA9ED;;AAgFA,WAAS,MAAT,CAAgB,MAAhB,EAA+B,GAA/B,EAA4D;AAC1D,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAD3B,EAEE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAF3B,EAGE,KAAK,CAAC,CAHR,EAIE,KAAK,CAAC,CAJR;AAOA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAD3B,EAEE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAF3B,EAGE,KAAK,CAAC,CAHR,EAIE,KAAK,CAAC,CAJR;AAMD;AACF;AACF,CA7IY;;;;;;;;;;;;;;;ACbb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAea,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAIA,MAAM,MAAM,GAAU,EAAtB;;AAEA,OAAK,IAAI,KAAK,GAAG,EAAZ,EAAgB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,KAAhC,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,QAAM,OAAO,GAAG,GAAG,CAAC,KAAJ,GAAY,CAA5B;AACA,QAAM,OAAO,GAAG,GAAG,CAAC,MAAJ,GAAa,CAA7B;AACA,QAAM,UAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,OAAlB,IAA6B,GAA9C;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAAZ;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAAZ;AACA,QAAM,CAAC,GAAG,OAAO,GAAG,GAAG,GAAG,UAA1B;AACA,QAAM,CAAC,GAAG,OAAO,GAAG,GAAG,GAAG,UAA1B;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACD;;AAED,MAAM,mBAAmB,GAAG;AAC1B,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,GAAG,CAAC,KAAJ,GAAY,CAAf,EAAkB,GAAG,CAAC,MAAJ,GAAa,CAA/B,CADoB;AAE1B,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,GAAG,CAAC,KAAJ,GAAY,CAAf,EAAkB,GAAG,CAAC,MAAJ,GAAa,CAA/B,CAFoB;AAG1B,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,EAHoB;AAI1B,IAAA,IAAI,EAAE;AAJoB,GAA5B;AAOA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,UAAM,IAAI,GAAG,OAAA,CAAA,QAAA,CAAS,KAAK,CAAC,IAAf,EAAqB,mBAAmB,CAAC,IAAzC,CAAb;AACA,MAAA,IAAI,GAAG,GAAP,IACE,OAAA,CAAA,gBAAA,CACE,KADF,EAEE,KAAK,CAAC,IAFR,EAGE,mBAHF,EAIE,mBAAmB,CAAC,IAJtB,CADF;AAOD;;AAED,QAAM,EAAE,GAAG,CAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,MAAA,OAAA,CAAA,UAAA,CAAW,KAAX,EAAkB,EAAlB;AACD;;AAED,QAAM,UAAU,GAAG,EAAnB;AACA,QAAM,OAAO,GAAG,EAAhB;AACA,QAAM,SAAS,GAAsB;AACnC,MAAA,OAAO,EAAE,OAAA,CAAA,EAAA,EAD0B;AAEnC,MAAA,MAAM,EAAE,OAAA,CAAA,EAAA,EAF2B;AAGnC,MAAA,MAAM,EAAE,OAAA,CAAA,EAAA;AAH2B,KAArC;;AAMA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,MAAM,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,YAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB;AACA,YAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB;AACA,YAAM,aAAa,GAAG,OAAA,CAAA,eAAA,CACpB,IAAI,CAAC,IAAL,CAAU,CADU,EAEpB,IAAI,CAAC,IAAL,CAAU,CAFU,EAGpB,IAAI,CAAC,CAHe,EAIpB,IAAI,CAAC,CAJe,EAKpB,IAAI,CAAC,IAAL,CAAU,CALU,EAMpB,IAAI,CAAC,IAAL,CAAU,CANU,EAOpB,IAAI,CAAC,CAPe,EAQpB,IAAI,CAAC,CARe,EASpB,SAToB,CAAtB;;AAYA,YACE,aAAa,IACb,OAAO,CAAC,OAAR,CAAgB,IAAI,CAAC,EAAL,GAAU,GAAV,GAAgB,IAAI,CAAC,EAArC,MAA6C,CAAC,CAD9C,IAEA,OAAO,CAAC,OAAR,CAAgB,IAAI,CAAC,EAAL,GAAU,GAAV,GAAgB,IAAI,CAAC,EAArC,MAA6C,CAAC,CAHhD,EAIE;AACA;AACA,cAAM,WAAW,GAAG,OAAA,CAAA,KAAA,CAAM,OAAA,CAAA,EAAA,EAAN,EAAY,SAAS,CAAC,OAAtB,EAA+B,GAA/B,CAApB;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,WAA1B,EANA,CAQA;;AACA,UAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AAEA,cAAM,KAAK,GAAG,OAAA,CAAA,EAAA,EAAd;AACA,cAAM,KAAK,GAAG,OAAA,CAAA,EAAA,EAAd;AAEA,cAAM,WAAW,GAAG,CAApB;AACA,cAAM,cAAc,GAAG,GAAvB;AACA,cAAM,eAAe,GAAG,IAAxB;AAEA,UAAA,OAAA,CAAA,qBAAA,CACE,IAAI,CAAC,IADP,EAEE,IAAI,CAAC,IAFP,EAGE,IAAI,CAAC,IAHP,EAIE,WAJF,EAKE,cALF,EAME,eANF,EAOE,IAAI,CAAC,IAPP,EAQE,IAAI,CAAC,IARP,EASE,IAAI,CAAC,IATP,EAUE,WAVF,EAWE,cAXF,EAYE,eAZF,EAaE;AACA;AACA;AACA;AACA,UAAA,OAAA,CAAA,EAAA,EAjBF,EAkBE,KAlBF,EAmBE,KAnBF,EAlBA,CAwCA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,KAA1B;AACA,UAAA,OAAA,CAAA,GAAA,CAAI,IAAI,CAAC,IAAT,EAAe,IAAI,CAAC,IAApB,EAA0B,KAA1B,EA1CA,CA4CA;;AACA,UAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AAEA,UAAA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,EAAL,GAAU,GAAV,GAAgB,IAAI,CAAC,EAAlC;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,EAAL,GAAU,GAAV,GAAgB,IAAI,CAAC,EAAlC;AACD;AACF;AACF;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,MAAA,OAAA,CAAA,OAAA,CAAQ,KAAR;AACD;;AAED,IAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GA5GD;;AA8GA,WAAS,OAAT,CAAiB,CAAjB,EAA4B,CAA5B,EAAqC;AACnC,WAAO;AACL,MAAA,EAAE,EAAE,QAAQ,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,QAA3B,CADP;AAEL,MAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAFD;AAGL,MAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHD;AAIL,MAAA,IAAI,EAAE,OAAA,CAAA,EAAA,EAJD;AAKL,MAAA,IAAI,EAAE,EALD;AAML,MAAA,CAAC,EAAE,EANE;AAOL,MAAA,CAAC,EAAE;AAPE,KAAP;AASD;;AAED,WAAS,MAAT,CAAgB,MAAhB,EAA+B,GAA/B,EAA4D;AAC1D,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAD3B,EAEE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAF3B,EAGE,KAAK,CAAC,CAHR,EAIE,KAAK,CAAC,CAJR;AAOA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAD3B,EAEE,KAAK,CAAC,IAAN,CAAW,CAAX,GAAe,KAAK,CAAC,CAAN,GAAU,CAF3B,EAGE,KAAK,CAAC,CAHR,EAIE,KAAK,CAAC,CAJR;AAMD;AACF;AACF,CAhLY;;;;;;;;;;;;;;;AChBb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAea,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B,EALmB,CASnB;;AACA,MAAM,MAAM,GAAG;AAAE,IAAA,CAAC,EAAE,GAAL;AAAU,IAAA,CAAC,EAAE;AAAb,GAAf;AACA,MAAM,mBAAmB,GAAG;AAC1B,IAAA,IAAI,EAAE,OAAA,CAAA,IAAA,CAAK,OAAA,CAAA,EAAA,EAAL,EAAW,MAAX,CADoB;AAE1B,IAAA,IAAI,EAAE,OAAA,CAAA,IAAA,CAAK,OAAA,CAAA,EAAA,EAAL,EAAW,MAAX,CAFoB;AAG1B,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,EAHoB;AAI1B,IAAA,MAAM,EAAE,EAJkB;AAK1B,IAAA,IAAI,EAAE;AALoB,GAA5B;AAOA,MAAM,MAAM,GAAG,EAAf;AACA,MAAM,OAAO,GAAG,GAAhB;AACA,MAAM,MAAM,GAAG,cAAc,CAAC,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAA7B;AACA,MAAM,SAAS,GAAY,EAA3B;AAEA,EAAA,MAAM,CAAC,OAAP,CAAe,mBAAf;AAEA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,KAAK,GAAG,OAAA,CAAA,EAAA,EAAd;AACA,QAAM,EAAE,GAAG,EAAX;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;;AACA,UAAI,KAAK,KAAK,mBAAd,EAAmC;AACjC,QAAA,OAAA,CAAA,gBAAA,CACE,KADF,EAEE,KAAK,CAAC,IAFR,EAGE,mBAHF,EAIE,mBAAmB,CAAC,IAJtB,EADiC,CAOjC;AACA;AACA;AACA;AACD;;AACD,MAAA,OAAA,CAAA,UAAA,CAAW,KAAX,EAAkB,EAAlB;AACD;;AAED,IAAA,cAAc,CAAC,SAAD,EAAY,MAAZ,CAAd;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC5C,UAAM,MAAM,GAAG,SAAS,CAAC,CAAD,CAAxB;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,CAAC,GAAG,CAAL,CAAxB;AACA,MAAA,OAAA,CAAA,mBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,MAJF,EAKE,MAAM,CAAC,MALT,EAME,MAAM,CAAC,IANT,EAOE,KAPF,EAQE,OARF;AAUD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,MAAA,OAAA,CAAA,OAAA,CAAQ,KAAR;AACD,KAxCW,CA0CZ;AACA;AACA;;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC5C,UAAM,MAAM,GAAG,SAAS,CAAC,CAAD,CAAxB;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,CAAC,GAAG,CAAL,CAAxB;AACA,MAAA,OAAA,CAAA,mBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,MAJF,EAKE,MAAM,CAAC,MALT,EAME,MAAM,CAAC,IANT,EAOE,IAPF,EAQE,OARF;AAUD;;AAED,IAAA,MAAM,CAAC,MAAD,EAAS,GAAT,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GAhED;;AAkEA,WAAS,cAAT,CAAwB,KAAxB,EAAwC,MAAxC,EAAuD;AACrD,IAAA,KAAK,CAAC,MAAN,GAAe,CAAf;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,MAAM,GAAG,MAAM,CAAC,CAAD,CAArB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,MAAM,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,YAAM,MAAM,GAAG,MAAM,CAAC,CAAD,CAArB;;AACA,YACE,OAAA,CAAA,mBAAA,CACE,MAAM,CAAC,IAAP,CAAY,CADd,EAEE,MAAM,CAAC,IAAP,CAAY,CAFd,EAGE,MAAM,CAAC,MAHT,EAIE,MAAM,CAAC,IAAP,CAAY,CAJd,EAKE,MAAM,CAAC,IAAP,CAAY,CALd,EAME,MAAM,CAAC,MANT,CADF,EASE;AACA,UAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,MAAnB;AACD;AACF;AACF;;AAED,WAAO,KAAP;AACD;;AAED,WAAS,cAAT,CAAwB,MAAxB,EAAyC,UAAzC,EAA6D,GAA7D,EAAwE;AACtE,QAAM,GAAG,GAAG,EAAZ;AACA,QAAM,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;AAC5B,UAAM,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,MAAM,CAAC,CAArB,GAAyB,MAAM,CAAC,CAA1C;AACA,UAAM,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,MAAM,CAAC,CAArB,GAAyB,MAAM,CAAC,CAA1C;AACA,MAAA,GAAG,CAAC,IAAJ,CAAS;AACP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SADC;AAEP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SAFC;AAGP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SAHC;AAIP,QAAA,MAAM,EAAE,IAAI,CAAC,GAAL,CACN,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,IAAI,CAAC,GAAL,CAAS,CAAT,CAAvB,IAAsC,UADhC,EAEN,SAFM,CAJD;AAQP,QAAA,IAAI,EAAE,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,IAAI,CAAC,GAAL,CAAS,CAAT,CAAvB,IAAsC,CAA/C,EAAkD,CAAlD;AARC,OAAT;AAUD;;AACD,WAAO,GAAP;AACD;;AAED,WAAS,MAAT,CAAgB,MAAhB,EAAiC,GAAjC,EAA8D;AAC5D,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AACD;AACF;AACF,CA3JY;;;;;;;;;;;;;;;AChBb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAqBa,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAkBA,MAAM,qBAAqB,GAAG,CAA9B;AAEA,MAAM,OAAO,GAAuB,EAApC;AACA,MAAM,KAAK,GAAqB,EAAhC;AACA,MAAM,WAAW,GAAyB,EAA1C;AAEA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAnB;AACA,EAAA,OAAO,CAAC,IAAR,CAAY,KAAZ,CAAA,OAAA,EAAgB,GAAG,CAAC,OAApB;AACA,EAAA,KAAK,CAAC,IAAN,CAAU,KAAV,CAAA,KAAA,EAAc,GAAG,CAAC,KAAlB;AACA,EAAA,WAAW,CAAC,IAAZ,CAAgB,KAAhB,CAAA,WAAA,EAAoB,GAAG,CAAC,WAAxB;AAEA,EAAA,OAAO,CAAC,IAAR,CAAa;AACX,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CADK;AAEX,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAFK;AAGX,IAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHK;AAIX,IAAA,IAAI,EAAE,GAJK;AAKX,IAAA,MAAM,EAAE;AALG,GAAb;AAQA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,EAAE,GAAG,EAAX;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,MAAA,OAAA,CAAA,UAAA,CAAW,MAAX,EAAmB,EAAnB;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,qBAApB,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,UAAU,GAAG,WAAW,CAAC,CAAD,CAA9B;AACA,QAAA,OAAA,CAAA,uBAAA,CACE,UAAU,CAAC,MADb,EAEE,UAAU,CAAC,MAAX,CAAkB,IAFpB,EAGE,UAAU,CAAC,MAHb,EAIE,UAAU,CAAC,MAAX,CAAkB,IAJpB,EAKE,UAAU,CAAC,IALb;AAOD;AACF;;AAED,IAAA,cAAc,CAAC,OAAD,EAAU,KAAV,CAAd;AACA,IAAA,YAAY,CAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,CAAZ;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,MAAA,OAAA,CAAA,OAAA,CAAQ,MAAR;AACD;;AAED,IAAA,cAAc,CAAC,OAAD,EAAU,IAAV,CAAd;AACA,IAAA,YAAY,CAAC,KAAD,EAAQ,OAAR,EAAiB,IAAjB,CAAZ;AAEA,IAAA,MAAM,CAAC,OAAD,EAAU,KAAV,EAAiB,GAAjB,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GAnCD;;AAqCA,WAAS,OAAT,CAAiB,CAAjB,EAA4B,CAA5B,EAAuC,KAAvC,EAAsD,MAAtD,EAAoE;AAClE,QAAM,KAAK,GAAqB,EAAhC;AACA,QAAM,OAAO,GAAuB,EAApC;AACA,QAAM,WAAW,GAAyB,EAA1C;AACA,QAAM,MAAM,GAAG,CACb,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CADa,EAEb,OAAA,CAAA,EAAA,CAAG,CAAC,GAAG,KAAP,EAAc,CAAd,CAFa,EAGb,OAAA,CAAA,EAAA,CAAG,CAAC,GAAG,KAAP,EAAc,CAAC,GAAG,MAAlB,CAHa,EAIb,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAC,GAAG,MAAV,CAJa,CAAf;;AAMA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,UAAM,IAAI,GAAG,OAAO,CAAC,MAAR,KAAmB,CAAnB,GAAuB,IAAvB,GAA8B,OAAO,CAAC,CAAC,GAAG,CAAL,CAAlD;AACA,UAAM,MAAM,GAAG;AACb,QAAA,IAAI,EAAE,OAAA,CAAA,IAAA,CAAK,OAAA,CAAA,EAAA,EAAL,EAAW,KAAX,CADO;AAEb,QAAA,IAAI,EAAE,OAAA,CAAA,IAAA,CAAK,OAAA,CAAA,EAAA,EAAL,EAAW,KAAX,CAFO;AAGb,QAAA,IAAI,EAAE,OAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHO;AAIb,QAAA,IAAI,EAAE,CAAC,KAAK,CAAN,GAAU,CAAC,CAAX,GAAe,CAJR;AAKb,QAAA,MAAM,EAAE;AALK,OAAf;;AAOA,UAAI,IAAJ,EAAU;AACR,QAAA,KAAK,CAAC,IAAN,CAAW;AACT,UAAA,MAAM,EAAE,IADC;AAET,UAAA,MAAM,EAAE;AAFC,SAAX;AAKA,QAAA,WAAW,CAAC,IAAZ,CAAiB;AACf,UAAA,MAAM,EAAE,IADO;AAEf,UAAA,MAAM,EAAE,MAFO;AAGf,UAAA,IAAI,EAAE,OAAA,CAAA,QAAA,CAAS,KAAT,EAAgB,IAAI,CAAC,IAArB;AAHS,SAAjB;AAKD;;AACD,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD;;AAED,IAAA,KAAK,CAAC,IAAN,CAAW;AACT,MAAA,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CADN;AAET,MAAA,MAAM,EAAE,OAAO,CAAC,CAAD;AAFN,KAAX;AAKA,IAAA,WAAW,CAAC,IAAZ,CAAiB;AACf,MAAA,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CADA;AAEf,MAAA,MAAM,EAAE,OAAO,CAAC,CAAD,CAFA;AAGf,MAAA,IAAI,EAAE,OAAA,CAAA,QAAA,CAAS,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CAAP,CAA4B,IAArC,EAA2C,OAAO,CAAC,CAAD,CAAP,CAAW,IAAtD;AAHS,KAAjB;AAMA,IAAA,WAAW,CAAC,IAAZ,CAAiB;AACf,MAAA,MAAM,EAAE,OAAO,CAAC,CAAD,CADA;AAEf,MAAA,MAAM,EAAE,OAAO,CAAC,CAAD,CAFA;AAGf,MAAA,IAAI,EAAE,OAAA,CAAA,QAAA,CAAS,OAAO,CAAC,CAAD,CAAP,CAAW,IAApB,EAA0B,OAAO,CAAC,CAAD,CAAP,CAAW,IAArC;AAHS,KAAjB;AAMA,WAAO;AACL,MAAA,KAAK,EAAA,KADA;AAEL,MAAA,OAAO,EAAA,OAFF;AAGL,MAAA,WAAW,EAAA;AAHN,KAAP;AAKD;;AAED,WAAS,cAAT,CACE,OADF,EAEE,eAFF,EAGE,OAHF,EAGe;AAAb,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,GAAA;AAAa;;AAEb,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,OAAO,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;AACA,YACE,CAAC,OAAA,CAAA,mBAAA,CACC,CAAC,CAAC,IAAF,CAAO,CADR,EAEC,CAAC,CAAC,IAAF,CAAO,CAFR,EAGC,CAAC,CAAC,MAHH,EAIC,CAAC,CAAC,IAAF,CAAO,CAJR,EAKC,CAAC,CAAC,IAAF,CAAO,CALR,EAMC,CAAC,CAAC,MANH,CADH,EAUE;AACF,QAAA,OAAA,CAAA,mBAAA,CACE,CADF,EAEE,CAAC,CAAC,MAFJ,EAGE,CAAC,CAAC,IAHJ,EAIE,CAJF,EAKE,CAAC,CAAC,MALJ,EAME,CAAC,CAAC,IANJ,EAOE,eAPF,EAQE,OARF;AAUD;AACF;AACF;;AAED,WAAS,YAAT,CACE,KADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAIe;AAAb,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,GAAA;AAAa;;AAEb,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,YAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB,CADuC,CAEvC;;AACA,YAAI,IAAI,CAAC,MAAL,IAAe,MAAf,IAAyB,IAAI,CAAC,MAAL,KAAgB,MAA7C,EAAqD;AACrD,YAAI,CAAC,eAAL,EACE,OAAA,CAAA,sBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,IAAI,CAAC,MAHP,EAIE,IAAI,CAAC,MAJP;AAMF,QAAA,OAAA,CAAA,iBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,IAAI,CAAC,MAJP,EAKE,IAAI,CAAC,MAAL,CAAY,IALd,EAME,IAAI,CAAC,MANP,EAOE,IAAI,CAAC,MAAL,CAAY,IAPd,EAQE,eARF,EASE,OATF;AAWD;AACF;AACF;;AAED,WAAS,MAAT,CACE,OADF,EAEE,QAFF,EAGE,GAHF,EAG+B;AAE7B,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAM,OAAO,GAAG,QAAQ,CAAC,CAAD,CAAxB;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,KAAlB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,OAAlB;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACD;AACF;AACF,CAnPY;;;;;;;;;;;;;;;ACtBb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAWa,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,QAAJ,GAAe,CAAf,CAHmB,CAGD;;AAClB,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAgBA,MAAM,MAAM,GAAqB;AAC/B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,CAAR,CADyB;AAE/B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,CAAR,CAFyB;AAG/B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHyB;AAI/B,IAAA,IAAI,EAAE,CAJyB;AAK/B,IAAA,MAAM,EAAE;AALuB,GAAjC;AAQA,MAAM,OAAO,GAAG,GAAhB;AAEA,MAAM,QAAQ,GAAmB;AAC/B,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CADA;AAEN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAFA;AAGN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHA;AAIN;AACA,MAAA,IAAI,EAAE,CAAC,CALD;AAMN,MAAA,MAAM,EAAE;AANF,KADuB;AAS/B,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CADA;AAEN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAFA;AAGN,MAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHA;AAIN;AACA;AACA,MAAA,IAAI,EAAE,CAAC,CAND;AAON,MAAA,MAAM,EAAE;AAPF,KATuB;AAkB/B,IAAA,IAAI,EAAE;AAlByB,GAAjC;AAqBA,MAAM,OAAO,GAAuB,CAClC,MADkC,EAElC,QAAQ,CAAC,MAFyB,EAGlC,QAAQ,CAAC,MAHyB,CAApC;AAMA,MAAM,WAAW,GAAG,KAAA,CAAA,EAAA,EAApB;AAEA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B,EA9DmB,CAgEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,EAAE,GAAG,EAAX,CADY,CAGZ;;AACA,IAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,OAAN,CAA9B;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,GAAG,GAAG,OAAO,CAAC,CAAD,CAAnB;AACA,MAAA,KAAA,CAAA,UAAA,CAAW,GAAX,EAAgB,EAAhB;AACD;;AAED,IAAA,KAAA,CAAA,sBAAA,CAAuB,MAAvB,EAA+B,MAAM,CAAC,MAAtC,EAA8C,QAAQ,CAAC,MAAvD,EAA+D,QAAQ,CAAC,MAAxE;AAEA,IAAA,KAAA,CAAA,iBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,QAAQ,CAAC,MAJX,EAKE,QAAQ,CAAC,MAAT,CAAgB,IALlB,EAME,QAAQ,CAAC,MANX,EAOE,QAAQ,CAAC,MAAT,CAAgB,IAPlB,EAQE,KARF,EASE,GATF;;AAYA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,GAAG,GAAG,OAAO,CAAC,CAAD,CAAnB;AACA,MAAA,KAAA,CAAA,OAAA,CAAQ,GAAR;AACD;;AAED,IAAA,KAAA,CAAA,iBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,QAAQ,CAAC,MAJX,EAKE,QAAQ,CAAC,MAAT,CAAgB,IALlB,EAME,QAAQ,CAAC,MANX,EAOE,QAAQ,CAAC,MAAT,CAAgB,IAPlB,EAQE,IARF,EASE,GATF;;AAYA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,MAAA,KAAA,CAAA,uBAAA,CACE,QAAQ,CAAC,MADX,EAEE,QAAQ,CAAC,MAAT,CAAgB,IAFlB,EAGE,QAAQ,CAAC,MAHX,EAIE,QAAQ,CAAC,MAAT,CAAgB,IAJlB,EAKE,QAAQ,CAAC,IALX;AAOD;;AAED,IAAA,MAAM,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV,EAAsB,GAAtB,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GAvDD;;AAyDA,WAAS,MAAT,CACE,OADF,EAEE,QAFF,EAGE,GAHF,EAG+B;AAE7B,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAM,OAAO,GAAG,QAAQ,CAAC,CAAD,CAAxB;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,KAAlB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,OAAlB;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACD;AACF;AACF,CArKY;;;;;;;;;;;;;;;ACZb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAca,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,QAAJ,GAAe,CAAf,CAHmB,CAGD;;AAClB,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,GAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAWA,MAAM,MAAM,GAAkB;AAC5B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,CAAR,CADsB;AAE5B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,CAAR,CAFsB;AAG5B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHsB;AAI5B,IAAA,KAAK,EAAE,EAJqB;AAK5B,IAAA,MAAM,EAAE,EALoB;AAM5B,IAAA,IAAI,EAAE;AANsB,GAA9B;AASA,MAAM,eAAe,GAAG,CAAxB;AACA,MAAM,OAAO,GAAG,GAAhB;AAEA,MAAM,QAAQ,GAAkB;AAC9B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CADwB;AAE9B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAFwB;AAG9B,IAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHwB;AAI9B,IAAA,KAAK,EAAE,GAJuB;AAK9B,IAAA,MAAM,EAAE,GALsB;AAM9B,IAAA,IAAI,EAAE,MAAM,CAAC,gBAAP,GAA0B;AANF,GAAhC;AASA,MAAM,KAAK,GAAoB,CAAC,MAAD,EAAS,QAAT,CAA/B;AAEA,MAAM,SAAS,GAAsB;AACnC,IAAA,OAAO,EAAE,KAAA,CAAA,EAAA,EAD0B;AAEnC,IAAA,MAAM,EAAE,KAAA,CAAA,EAAA,EAF2B;AAGnC,IAAA,MAAM,EAAE,KAAA,CAAA,EAAA;AAH2B,GAArC;AAMA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;AAEA,MAAM,IAAI,GAA+B,EAAzC;AACA,EAAA,GAAG,CAAC,gBAAJ,CAAqB,SAArB,EAAgC,UAAA,CAAA,EAAC;AAC/B,IAAA,IAAI,CAAC,CAAC,CAAC,GAAH,CAAJ,GAAc,IAAd;AACA,IAAA,CAAC,CAAC,cAAF;AACD,GAHD;AAIA,EAAA,QAAQ,CAAC,IAAT,CAAc,gBAAd,CAA+B,OAA/B,EAAwC,UAAA,CAAA,EAAC;AACvC,IAAA,IAAI,CAAC,CAAC,CAAC,GAAH,CAAJ,GAAc,KAAd;AACA,IAAA,CAAC,CAAC,cAAF;AACD,GAHD;;AAKA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,EAAE,GAAG,EAAX,CADY,CAGZ;;AACA,IAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,OAAN,CAA9B;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,GAAG,GAAG,KAAK,CAAC,CAAD,CAAjB;AACA,MAAA,KAAA,CAAA,UAAA,CAAW,GAAX,EAAgB,EAAhB;AACD;;AAED,QAAM,aAAa,GAAG,KAAA,CAAA,eAAA,CACpB,MAAM,CAAC,IAAP,CAAY,CADQ,EAEpB,MAAM,CAAC,IAAP,CAAY,CAFQ,EAGpB,MAAM,CAAC,KAHa,EAIpB,MAAM,CAAC,MAJa,EAKpB,QAAQ,CAAC,IAAT,CAAc,CALM,EAMpB,QAAQ,CAAC,IAAT,CAAc,CANM,EAOpB,QAAQ,CAAC,KAPW,EAQpB,QAAQ,CAAC,MARW,EASpB,SAToB,CAAtB;;AAYA,QAAI,aAAJ,EAAmB;AACjB;AACA,UAAM,eAAe,GAAG,KAAA,CAAA,KAAA,CAAM,KAAA,CAAA,EAAA,EAAN,EAAY,SAAS,CAAC,OAAtB,EAA+B,CAAC,CAAhC,CAAxB,CAFiB,CAGjB;;AACA,MAAA,KAAA,CAAA,SAAA,CAAU,eAAV,EAA2B,MAAM,CAAC,IAAlC,EAAwC,MAAM,CAAC,IAA/C,EAJiB,CAMjB;;AACA,MAAA,MAAM,CAAC,KAAD,EAAQ,GAAR,CAAN,CAPiB,CASjB;;AACA,UAAM,KAAK,GAAG,KAAA,CAAA,EAAA,EAAd;AACA,UAAM,KAAK,GAAG,KAAA,CAAA,EAAA,EAAd;AAEA,UAAM,WAAW,GAAG,CAApB;AACA,UAAM,cAAc,GAAG,GAAvB;AACA,UAAM,eAAe,GAAG,GAAxB;AAEA,MAAA,KAAA,CAAA,qBAAA,CACE,MAAM,CAAC,IADT,EAEE,MAAM,CAAC,IAFT,EAGE,MAAM,CAAC,IAHT,EAIE,WAJF,EAKE,cALF,EAME,eANF,EAOE,QAAQ,CAAC,IAPX,EAQE,QAAQ,CAAC,IARX,EASE,QAAQ,CAAC,IATX,EAUE,WAVF,EAWE,cAXF,EAYE,eAZF,EAaE,SAAS,CAAC,MAbZ,EAcE,KAdF,EAeE,KAfF,EAjBiB,CAmCjB;;AACA,MAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,KAA9B,EApCiB,CAqCjB;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,GAAgB,MAAM,CAAC,IAAP,CAAY,CAA5B,CAtCiB,CAwCjB;;AACA,MAAA,MAAM,CAAC,KAAD,EAAQ,GAAR,CAAN;AACD,KAjEW,CAmEZ;;;AAEA,QAAI,IAAI,CAAC,SAAT,EAAoB;AAClB,MAAA,KAAA,CAAA,GAAA,CACE,MAAM,CAAC,IADT,EAEE,MAAM,CAAC,IAFT,EAGE,KAAA,CAAA,EAAA,CAAG,aAAa,GAAG,CAAC,eAAJ,GAAsB,CAAC,eAAD,GAAmB,EAAzD,EAA6D,CAA7D,CAHF;AAKD;;AAED,QAAI,IAAI,CAAC,UAAT,EAAqB;AACnB,MAAA,KAAA,CAAA,GAAA,CACE,MAAM,CAAC,IADT,EAEE,MAAM,CAAC,IAFT,EAGE,KAAA,CAAA,EAAA,CAAG,aAAa,GAAG,eAAH,GAAqB,eAAe,GAAG,EAAvD,EAA2D,CAA3D,CAHF;AAKD,KAnFW,CAqFZ;;;AACA,QAAI,aAAa,IAAI,IAAI,CAAC,OAAtB,IAAiC,MAAM,CAAC,IAAP,CAAY,CAAZ,GAAgB,MAAM,CAAC,IAAP,CAAY,CAA5B,KAAkC,CAAvE,EAA0E;AACxE,MAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAC,OAAD,GAAW,EAAjB,CAA9B;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,GAAG,GAAG,KAAK,CAAC,CAAD,CAAjB;AACA,MAAA,KAAA,CAAA,OAAA,CAAQ,GAAR;AACD;;AAED,IAAA,MAAM,CAAC,KAAD,EAAQ,GAAR,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GAlGD;;AAoGA,WAAS,MAAT,CAAgB,KAAhB,EAAwC,GAAxC,EAAqE;AACnE,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,GAAG,GAAG,KAAK,CAAC,CAAD,CAAjB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,GAAG,CAAC,KAAJ,GAAY,CAD3B,EAEE,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,GAAG,CAAC,MAAJ,GAAa,CAF5B,EAGE,GAAG,CAAC,KAHN,EAIE,GAAG,CAAC,MAJN;AAOA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,QAAJ,CACE,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,GAAG,CAAC,KAAJ,GAAY,CAD3B,EAEE,GAAG,CAAC,IAAJ,CAAS,CAAT,GAAa,GAAG,CAAC,MAAJ,GAAa,CAF5B,EAGE,GAAG,CAAC,KAHN,EAIE,GAAG,CAAC,MAJN;AAMD;AACF;AACF,CArLY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfb,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAuBa,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MAAM,KAAK,GAAG,GAAd;AACA,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,UAAJ,CAAe,IAAf,CAAZ;AACA,EAAA,GAAG,CAAC,QAAJ,GAAe,CAAf,CAJmB,CAID;;AAClB,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,MAAJ,GAAa,KAAzB;AACA,EAAA,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,gBAAnB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AAqBA,MAAM,OAAO,GAAG,GAAhB;AACA,MAAM,gBAAgB,GAAG,CAAzB;AAEA,MAAM,KAAK,GAAqB,EAAhC;AACA,MAAM,WAAW,GAAyB,EAA1C;AACA,MAAM,OAAO,GAAuB,EAApC;AAEA,MAAM,MAAM,GAAG,cAAc,CAAC,CAC5B,KAAA,CAAA,EAAA,CAAG,EAAH,EAAO,EAAP,CAD4B,EAE5B,KAAA,CAAA,EAAA,CAAG,KAAK,GAAG,EAAX,EAAe,EAAf,CAF4B,EAG5B,KAAA,CAAA,EAAA,CAAG,KAAK,GAAG,EAAX,EAAe,KAAK,GAAG,EAAvB,CAH4B,EAI5B,KAAA,CAAA,EAAA,CAAG,EAAH,EAAO,KAAK,GAAG,EAAf,CAJ4B,CAAD,CAA7B;AAOA,MAAM,OAAO,GAAG,cAAc,CAAC,CAC7B,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,KAAK,GAAG,CAAhB,CAD6B,EAE7B,KAAA,CAAA,EAAA,CAAG,KAAK,GAAG,GAAX,EAAgB,KAAK,GAAG,CAAR,GAAY,GAA5B,CAF6B,CAAD,CAA9B;AAIA,EAAA,OAAO,CAAC,GAAR,GA9CmB,CA8CJ;;AACf,EAAA,KAAK,CAAC,IAAN,CAAU,KAAV,EADe;AACf,EAAA,KAAA,EAAK,cAAA,CAAS,MAAT,EAAoB,OAApB,CAAL;AAEA,EAAA,OAAO,CAAC,IAAR,CAAY,KAAZ,CAAA,OAAA,EAAgB,WAAW,CAAC,KAAA,CAAA,EAAA,CAAG,KAAK,GAAG,CAAX,EAAc,KAAK,GAAG,CAAtB,CAAD,EAA2B,KAAK,GAAG,CAAnC,EAAsC,EAAtC,EAA0C,GAA1C,CAA3B;AAEA,MAAM,KAAK,GAAG,CACZ,WAAW,CAAC,CAAD,EAAI,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAAJ,EAAkB,EAAlB,CADC,EAEZ,WAAW,CAAC,CAAD,EAAI,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAAJ,EAAkB,EAAlB,CAFC,EAGZ,WAAW,CAAC,CAAD,EAAI,KAAA,CAAA,EAAA,CAAG,GAAH,EAAQ,GAAR,CAAJ,EAAkB,EAAlB,CAHC,CAAd;AAMA,EAAA,KAAK,CAAC,OAAN,CAAc,UAAA,IAAA,EAAI;AAChB,IAAA,OAAO,CAAC,IAAR,CAAY,KAAZ,CAAA,OAAA,EAAgB,IAAI,CAAC,OAArB;AACA,IAAA,WAAW,CAAC,IAAZ,CAAgB,KAAhB,CAAA,WAAA,EAAoB,IAAI,CAAC,WAAzB;AACA,IAAA,KAAK,CAAC,IAAN,CAAU,KAAV,CAAA,KAAA,EAAc,IAAI,CAAC,KAAnB;AACD,GAJD;AAMA,MAAI,OAAO,GAAG,IAAd;AACA,EAAA,cAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAC,OAAO,GAAG,KAAX;AAAiB,GAA/B;;AAEA,GAAC,SAAS,IAAT,GAAa;AACZ,QAAM,EAAE,GAAG,EAAX;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;;AAEA,UAAI,MAAM,CAAC,IAAP,GAAc,CAAlB,EAAqB;AACnB,QAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,OAAN,CAA9B;AACD;;AAED,MAAA,KAAA,CAAA,UAAA,CAAW,MAAX,EAAmB,EAAnB;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,gBAApB,EAAsC,CAAC,EAAvC,EAA2C;AACzC,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,UAAU,GAAG,WAAW,CAAC,CAAD,CAA9B;AACA,QAAA,KAAA,CAAA,uBAAA,CACE,UAAU,CAAC,MADb,EAEE,UAAU,CAAC,MAAX,CAAkB,IAFpB,EAGE,UAAU,CAAC,MAHb,EAIE,UAAU,CAAC,MAAX,CAAkB,IAJpB,EAKE,UAAU,CAAC,IALb,EAME,CANF;AAQD;AACF;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;AACA,UAAM,YAAY,GAAG,MAAM,CAAC,OAAP,CAAe,IAAf,IAAuB,CAAC,CAA7C;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,YAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,YAAI,MAAM,KAAK,IAAI,CAAC,MAAhB,IAA0B,MAAM,KAAK,IAAI,CAAC,MAA9C,EAAsD,SAFf,CAGvC;AACA;AACA;AACA;AACA;;AACA,YAAI,CAAC,YAAL,EAAmB;AACjB,UAAA,KAAA,CAAA,sBAAA,CAAuB,MAAvB,EAA+B,MAAM,CAAC,MAAtC,EAA8C,IAAI,CAAC,MAAnD,EAA2D,IAAI,CAAC,MAAhE;AACD;;AAED,QAAA,KAAA,CAAA,iBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,IAAI,CAAC,MAJP,EAKE,IAAI,CAAC,MAAL,CAAY,IALd,EAME,IAAI,CAAC,MANP,EAOE,IAAI,CAAC,MAAL,CAAY,IAPd,EAQE,KARF,EASE,GATF;AAWD;AACF;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,OAAO,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;AACA,YACE,CAAC,KAAA,CAAA,mBAAA,CACC,CAAC,CAAC,IAAF,CAAO,CADR,EAEC,CAAC,CAAC,IAAF,CAAO,CAFR,EAGC,CAAC,CAAC,MAHH,EAIC,CAAC,CAAC,IAAF,CAAO,CAJR,EAKC,CAAC,CAAC,IAAF,CAAO,CALR,EAMC,CAAC,CAAC,MANH,CADH,EAUE;AACF,QAAA,KAAA,CAAA,mBAAA,CACE,CADF,EAEE,CAAC,CAAC,MAFJ,EAGE,CAAC,CAAC,IAHJ,EAIE,CAJF,EAKE,CAAC,CAAC,MALJ,EAME,CAAC,CAAC,IANJ,EAOE,KAPF,EAQE,GARF;AAUD;AACF;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,MAAA,KAAA,CAAA,OAAA,CAAQ,MAAR;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,YAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,YAAI,MAAM,KAAK,IAAI,CAAC,MAAhB,IAA0B,MAAM,KAAK,IAAI,CAAC,MAA9C,EAAsD;AACtD,QAAA,KAAA,CAAA,iBAAA,CACE,MADF,EAEE,MAAM,CAAC,MAFT,EAGE,MAAM,CAAC,IAHT,EAIE,IAAI,CAAC,MAJP,EAKE,IAAI,CAAC,MAAL,CAAY,IALd,EAME,IAAI,CAAC,MANP,EAOE,IAAI,CAAC,MAAL,CAAY,IAPd,EAQE,IARF,EASE,GATF;AAWD;AACF;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,OAAO,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,CAAC,GAAG,OAAO,CAAC,CAAD,CAAjB;AACA,YACE,CAAC,KAAA,CAAA,mBAAA,CACC,CAAC,CAAC,IAAF,CAAO,CADR,EAEC,CAAC,CAAC,IAAF,CAAO,CAFR,EAGC,CAAC,CAAC,MAHH,EAIC,CAAC,CAAC,IAAF,CAAO,CAJR,EAKC,CAAC,CAAC,IAAF,CAAO,CALR,EAMC,CAAC,CAAC,MANH,CADH,EAUE;AACF,QAAA,KAAA,CAAA,mBAAA,CACE,CADF,EAEE,CAAC,CAAC,MAFJ,EAGE,CAAC,CAAC,IAHJ,EAIE,CAJF,EAKE,CAAC,CAAC,MALJ,EAME,CAAC,CAAC,IANJ,EAOE,IAPF,EAQE,GARF;AAUD;AACF,KAtIW,CAwIZ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB,CADsC,CAEtC;AACA;;AACA,UAAI,IAAI,KAAK,OAAO,CAAC,CAAD,CAApB,EAAyB;;AAEzB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,YAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AAEA,YAAM,UAAU,GAAwB;AACtC,UAAA,QAAQ,EAAE,MAAM,CAAC,gBADqB;AAEtC,UAAA,UAAU,EAAE,CAF0B;AAGtC,UAAA,CAAC,EAAE,MAAM,CAAC,gBAH4B;AAItC,UAAA,cAAc,EAAE,KAAA,CAAA,EAAA,EAJsB;AAKtC,UAAA,UAAU,EAAE,KAAA,CAAA,EAAA;AAL0B,SAAxC,CAHuC,CAWvC;AACA;;AACA,QAAA,KAAA,CAAA,gBAAA,CAAiB,MAAM,CAAC,IAAxB,EAA8B,IAAI,CAAC,MAAL,CAAY,IAA1C,EAAgD,IAAI,CAAC,MAAL,CAAY,IAA5D,EAAkE,UAAlE,EAbuC,CAevC;AACA;AACA;AACA;;AACA,YAAI,UAAU,CAAC,UAAX,GAAwB,CAA5B,EAA+B,SAnBQ,CAqBvC;AACA;;AACA,YAAM,MAAM,GAAG,KAAA,CAAA,EAAA,EAAf;AACA,QAAA,KAAA,CAAA,GAAA,CAAI,MAAJ,EAAY,UAAU,CAAC,cAAvB,EAAuC,MAAM,CAAC,IAA9C;AACA,QAAA,KAAA,CAAA,GAAA,CAAI,MAAM,CAAC,IAAX,EAAiB,MAAM,CAAC,IAAxB,EAA8B,MAA9B,EAzBuC,CA0BvC;AACA;AACA;AACD;AACF;;AAED,IAAA,MAAM,CAAC,OAAD,EAAU,KAAV,EAAiB,WAAjB,EAA8B,GAA9B,CAAN;AACA,QAAI,CAAC,OAAL,EAAc;AACd,IAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACD,GAxLD;;AA0LA,WAAS,cAAT,CAAwB,MAAxB,EAAyC;AACvC,QAAM,MAAM,GAAqB,EAAjC;AACA,QAAM,OAAO,GAAuB,EAApC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,UAAM,IAAI,GAAG,OAAO,CAAC,MAAR,KAAmB,CAAnB,GAAuB,IAAvB,GAA8B,OAAO,CAAC,CAAC,GAAG,CAAL,CAAlD;AACA,UAAM,MAAM,GAAG;AACb,QAAA,IAAI,EAAE,KAAA,CAAA,IAAA,CAAK,KAAA,CAAA,EAAA,EAAL,EAAW,KAAX,CADO;AAEb,QAAA,IAAI,EAAE,KAAA,CAAA,IAAA,CAAK,KAAA,CAAA,EAAA,EAAL,EAAW,KAAX,CAFO;AAGb,QAAA,IAAI,EAAE,KAAA,CAAA,EAAA,CAAG,CAAH,EAAM,CAAN,CAHO;AAIb,QAAA,IAAI,EAAE,CAAC,CAJM;AAKb,QAAA,MAAM,EAAE;AALK,OAAf;;AAOA,UAAI,IAAJ,EAAU;AACR,YAAM,IAAI,GAAG;AACX,UAAA,MAAM,EAAE,IADG;AAEX,UAAA,MAAM,EAAE;AAFG,SAAb;AAIA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAZ;AACD;;AACD,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD;;AAED,IAAA,MAAM,CAAC,IAAP,CAAY;AACV,MAAA,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CADL;AAEV,MAAA,MAAM,EAAE,OAAO,CAAC,CAAD;AAFL,KAAZ;AAKA,WAAO,MAAP;AACD;;AAED,WAAS,WAAT,CACE,MADF,EAEE,WAFF,EAGE,UAHF,EAIE,GAJF,EAIa;AAEX,QAAM,GAAG,GAAG,EAAZ;AACA,QAAM,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;AAC5B,UAAM,CAAC,GAAG,MAAM,CAAC,CAAP,GAAW,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,WAAnC;AACA,UAAM,CAAC,GAAG,MAAM,CAAC,CAAP,GAAW,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,WAAnC;AACA,MAAA,GAAG,CAAC,IAAJ,CAAS;AACP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SADC;AAEP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SAFC;AAGP,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SAHC;AAIP,QAAA,MAAM,EAAE,IAAI,CAAC,GAAL,CACN,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,IAAI,CAAC,GAAL,CAAS,CAAT,CAAvB,IAAsC,UADhC,EAEN,SAFM,CAJD;AAQP,QAAA,IAAI,EAAE,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,IAAI,CAAC,GAAL,CAAS,CAAT,CAAvB,IAAsC,CAA/C,EAAkD,CAAlD;AARC,OAAT;AAUD;;AACD,WAAO,GAAP;AACD;;AAED,WAAS,WAAT,CAAqB,GAArB,EAAkC,MAAlC,EAAmD,MAAnD,EAAiE;AAC/D,QAAM,MAAM,GAAqB,EAAjC;AACA,QAAM,OAAO,GAAuB,EAApC;AACA,QAAM,WAAW,GAAyB,EAA1C;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;AAC5B,UAAM,CAAC,GAAG,MAAM,CAAC,CAAP,GAAW,IAAI,CAAC,GAAL,CAAU,CAAC,GAAG,GAAL,GAAY,IAAI,CAAC,EAAjB,GAAsB,CAA/B,IAAoC,MAAzD;AACA,UAAM,CAAC,GAAG,MAAM,CAAC,CAAP,GAAW,IAAI,CAAC,GAAL,CAAU,CAAC,GAAG,GAAL,GAAY,IAAI,CAAC,EAAjB,GAAsB,CAA/B,IAAoC,MAAzD;AACA,MAAA,OAAO,CAAC,IAAR,CAAa;AACX,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SADK;AAEX,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAA,CAAH;AAAK,UAAA,CAAC,EAAA;AAAN,SAFK;AAGX,QAAA,IAAI,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SAHK;AAIX,QAAA,MAAM,EAAE,CAJG;AAKX,QAAA,IAAI,EAAE;AALK,OAAb;AAOD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,UAAM,MAAM,GAAG,CAAC,KAAK,OAAO,CAAC,MAAR,GAAiB,CAAvB,GAA2B,OAAO,CAAC,CAAD,CAAlC,GAAwC,OAAO,CAAC,CAAC,GAAG,CAAL,CAA9D;AACA,MAAA,MAAM,CAAC,IAAP,CAAY;AACV,QAAA,MAAM,EAAA,MADI;AAEV,QAAA,MAAM,EAAA;AAFI,OAAZ;AAID;;mCAEQ,GAAC;AACR,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;AACA,UAAI,CAAC,GAAG,CAAR;;;AAEE,QAAA,CAAC;AACD,YAAM,MAAM,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,MAAb,CAAtB;AACA,YAAI,MAAM,KAAK,MAAf;AACA,YACE,WAAW,CAAC,IAAZ,CACE,UAAA,CAAA,EAAC;AACC,iBAAC,CAAC,CAAC,MAAF,KAAa,MAAb,IAAuB,CAAC,CAAC,MAAF,KAAa,MAArC,IACC,CAAC,CAAC,MAAF,KAAa,MAAb,IAAuB,CAAC,CAAC,MAAF,KAAa,MADrC;AAC4C,SAHhD,MAIM,SALR;AAQA,QAAA,WAAW,CAAC,IAAZ,CAAiB;AACf,UAAA,MAAM,EAAA,MADS;AAEf,UAAA,MAAM,EAAA,MAFS;AAGf,UAAA,IAAI,EAAE,KAAA,CAAA,QAAA,CAAS,MAAM,CAAC,IAAhB,EAAsB,MAAM,CAAC,IAA7B;AAHS,SAAjB;;;AAZF,aAAO,IAAP,EAAW;;;;AAiBV;;;AApBH,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAuC;cAA9B;AAqBR;;AAED,WAAO;AACL,MAAA,OAAO,EAAA,OADF;AAEL,MAAA,KAAK,EAAE,MAFF;AAGL,MAAA,WAAW,EAAA;AAHN,KAAP;AAKD;;AAED,WAAS,MAAT,CACE,OADF,EAEE,QAFF,EAGE,WAHF,EAIE,GAJF,EAI+B;AAE7B,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAAG,CAAC,MAAJ,CAAW,KAA/B,EAAsC,GAAG,CAAC,MAAJ,CAAW,MAAjD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAhB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,CAAC,IAAN,CAAW,CAAnB,EAAsB,KAAK,CAAC,IAAN,CAAW,CAAjC,EAAoC,KAAK,CAAC,MAA1C,EAAkD,CAAlD,EAAqD,IAAI,CAAC,EAAL,GAAU,CAA/D,EAAkE,KAAlE;AACA,MAAA,GAAG,CAAC,IAAJ;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAM,OAAO,GAAG,QAAQ,CAAC,CAAD,CAAxB;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,KAAlB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,OAAlB;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAA/B,EAAkC,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAtD;AACA,MAAA,GAAG,CAAC,MAAJ;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,UAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,SAAlB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAAzB,EAA4B,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAA1C;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAAzB,EAA4B,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAA1C;AACA,MAAA,GAAG,CAAC,MAAJ;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,WAAJ,GAAkB,QAAlB;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAAzB,EAA4B,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAA1C;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAAzB,EAA4B,CAAC,CAAC,MAAF,CAAS,IAAT,CAAc,CAA1C;AACA,MAAA,GAAG,CAAC,MAAJ;AACD;AACF;AACF,CA5ZY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBb,IAAA,eAAA,GAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,YAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,YAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,YAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,IAAM,EAAE,GAAG,IAAI,eAAJ,CAAoB,MAAM,CAAC,QAAP,CAAgB,MAApC,CAAX;AACA,IAAM,QAAQ,GAAG,EAAE,CAAC,GAAH,CAAO,MAAP,CAAjB;AAEA,IAAM,KAAK,GAAG,IAAI,GAAJ,CAA0D,CACtE,CAAC,4BAAD,EAA+B,MAA/B,CADsE,EAEtE,CAAC,4BAAD,EAA+B,gBAA/B,CAFsE,EAGtE,CAAC,kCAAD,EAAqC,kBAArC,CAHsE,EAItE,CAAC,gCAAD,EAAmC,aAAnC,CAJsE,EAKtE,CAAC,iCAAD,EAAoC,UAApC,CALsE,EAMtE,CAAC,wCAAD,EAA2C,eAA3C,CANsE,EAOtE,CAAC,qCAAD,EAAwC,YAAxC,CAPsE,CAA1D,CAAd;;AAUA,IAAI,QAAQ,IAAI,KAAK,CAAC,GAAN,CAAU,QAAV,CAAhB,EAAqC;AACnC,EAAA,KAAK,CAAC,GAAN,CAAU,QAAV,EAAqB,KAArB;AACD,CAFD,MAEO;AACL,MAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,IAAN,EAAX,CAAd;;AAEA,MAAM,IAAE,GAAG,SAAL,IAAK,CAAC,IAAD,EAAa;AACtB,QAAM,GAAG,GAAG,kBAAkB,CAAC,IAAD,CAA9B;AACA,QAAM,GAAG,GAAM,MAAM,CAAC,QAAP,CAAgB,QAAhB,GAAwB,QAAxB,GAAiC,GAAhD;AACA,WAAO,2BACU,GADV,GACa,KADb,GACkB,IADlB,GACsB,iBAD7B;AAGD,GAND;;AAQA,MAAM,IAAI,GAAG,uBAEP,KAAK,CAAC,GAAN,CAAU,UAAA,IAAA,EAAI;AAAI,WAAA,IAAE,CAAC,IAAD,CAAF;AAAQ,GAA1B,EAA4B,IAA5B,CAAiC,IAAjC,CAFO,GAE+B,iBAF5C;AAKA,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAX;AACA,EAAA,EAAE,CAAC,SAAH,GAAe,IAAf;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,EAA1B;AACD;;;AC1CD,IAAIA,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIxB,QAAQ,CAAC0B,MAAb,EAAqB;AAAE;AAC5B1B,QAAAA,QAAQ,CAAC0B,MAAT;AACD;AACF;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI5C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB7C,IAAI,CAAC6C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C9C,IAAI,CAAC6C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAD,CAAhC;AACAkD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB7D,UAAxB,CAAd;;AACA,MAAIwD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BjD,IAA5B,EAAkC;AAChC,MAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBzD,IAAI,CAAC6C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBzD,IAAI,CAAC6C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBhE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKjC,EAAR,IAAekC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,KAAwBpC,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAACvD,IAAR,CAAawD,CAAb;AACD;AACF;AACF;;AAED,MAAInE,MAAM,CAACe,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeT,UAAU,CAAChE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAIgE,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC6C,IAAX,CAApB;AACD,GAJD,MAIO,IAAI3E,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOR,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC0C,IAArC,CAA0C,UAAU1C,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB5C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIsE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACxE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIsE,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BgE,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUkD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC/E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAwC,EAAAA,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAT;;AACA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUkD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"examples.77de5100.js","sourceRoot":"../examples","sourcesContent":["\nmodule.exports = function(onhalt, opt_msg, opt_keycode) {\n  document.addEventListener('keydown', function(e) {\n    if (e.which == (opt_keycode || 27)) {\n      onhalt();\n      console.log(opt_msg || 'HALT IN THE NAME OF SCIENCE!');\n    }\n  })\n}","export type Vector2 = { x: number; y: number; };\n\nexport function v2 (x?: number, y?: number) {\n  return { x: x || 0, y: y || 0 }\n}\n\nexport const copy = (out: Vector2, a: Vector2) => {\n  out.x = a.x;\n  out.y = a.y;\n  return out;\n}\n\nexport const set = (out: Vector2, x: number, y: number) => {\n  out.x = x;\n  out.y = y;\n  return out;\n}\n\nexport const add = (out: Vector2, a: Vector2, b: Vector2) => {\n  out.x = a.x + b.x;\n  out.y = a.y + b.y;\n  return out;\n}\n\nexport const sub = (out: Vector2, a: Vector2, b: Vector2) => {\n  out.x = a.x - b.x;\n  out.y = a.y - b.y;\n  return out;\n}\n\nexport const dot = (a: Vector2, b: Vector2) => a.x * b.x + a.y * b.y\n\nexport const scale = (out: Vector2, a: Vector2, factor: number) => {\n  out.x = a.x * factor;\n  out.y = a.y * factor;\n  return out;\n}\n\nexport const distance = (v1: Vector2, v2: Vector2) => {\n  const x = v1.x - v2.x;\n  const y = v1.y - v2.y;\n  return Math.sqrt(x*x + y*y);\n}\n\nexport const distance2 = (v1: Vector2, v2: Vector2) => {\n  const x = v1.x - v2.x;\n  const y = v1.y - v2.y;\n  return x*x + y*y;\n}\n\nexport const magnitude = (v1: Vector2) => {\n  const x = v1.x;\n  const y = v1.y;\n  return Math.sqrt(x*x + y*y);\n}\n\nexport const normalize = (out: Vector2, a: Vector2) => {\n  const x = a.x;\n  const y = a.y;\n  let len = x*x + y*y;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out.x = a.x * len;\n    out.y = a.y * len;\n  }\n  return out;\n}\n\n/**\n * Compute the normal pointing away perpendicular from two vectors.\n * Given v1(0,0) -> v2(10, 0), the normal will be (0, 1)\n * */\nexport const normal = (out: Vector2, v1: Vector2, v2: Vector2) => {\n  out.y = v2.x - v1.x;\n  out.x = v1.y - v2.y;\n  return normalize(out, out);\n}\n\n// the perpendicular dot product, also known as \"cross\" elsewhere\n// http://stackoverflow.com/a/243977/169491\nexport const perpDot = (v1: Vector2, v2: Vector2) => {\n  return v1.x * v2.y - v1.y * v2.x;\n}\n\n/**\n * This is mostly useful for moving a verlet-style [current, previous]\n * by the same amount, translating them while preserving velocity.\n * @param by the vector to add to each subsequent vector\n * @param vN any number of vectors to translate\n */\nexport const translate = (by: Vector2, ...vN: Vector2[]) => {\n  for (let i = 0; i < vN.length; i++) {\n    const v = vN[i];\n    add(v, v, by);\n  }\n}","import { set } from './v2';\nimport { DeltaTimeMS, Integratable } from './common-types';\n\nexport const accelerate = (cmp: Integratable, dt: DeltaTimeMS) => {\n  // apply acceleration to current position, convert dt to seconds\n  cmp.cpos.x += cmp.acel.x * dt * dt * 0.001;\n  cmp.cpos.y += cmp.acel.y * dt * dt * 0.001;\n\n  // reset acceleration\n  set(cmp.acel, 0, 0);\n};","import { add, distance2, set, sub } from \"./v2\";\nimport { VelocityDerivable } from \"./common-types\";\n\n// Preallocations!\nconst vel1 = { x: 0, y: 0 };\nconst vel2 = { x: 0, y: 0 };\nconst diff = { x: 0, y: 0 };\nconst move = { x: 0, y: 0 };\n\n// TODO: is the below even true???\n// The codeflow demo does nothing if the circles are no longer overlapping.\n\n// It's very important that this function not do any distance checking.\n// It is assumed that if this function is called, then the points are\n// definitely colliding, and that after being called with preserveInertia\n// === false, another call with === true should be made, even if the first\n// calculation has moved the points away from physically touching.\n\nexport const collideCircleCircle = (\n  p1: VelocityDerivable,\n  p1radius: number,\n  p1mass: number,\n  p2: VelocityDerivable,\n  p2radius: number,\n  p2mass: number,\n  preserveInertia: boolean,\n  damping: number\n) => {\n  const dist2 = distance2(p1.cpos, p2.cpos);\n  const target = p1radius + p2radius;\n  const min2 = target * target;\n\n  // if (dist2 > min2) return;\n\n  sub(vel1, p1.cpos, p1.ppos);\n  sub(vel2, p2.cpos, p2.ppos);\n\n  sub(diff, p1.cpos, p2.cpos);\n  const dist = Math.sqrt(dist2);\n  let factor = (dist - target) / dist;\n\n  // Avoid division by zero in case points are directly atop each other.\n  if (dist === 0) factor = 1;\n\n  const mass1 = p1mass > 0 ? p1mass : 1;\n  const mass2 = p2mass > 0 ? p2mass : 1;\n  const massT = mass1 + mass2;\n\n  // Move a away\n  move.x = diff.x * factor * (mass2 / massT);\n  move.y = diff.y * factor * (mass2 / massT);\n  if (p1mass > 0) {\n    sub(p1.cpos, p1.cpos, move);\n  }\n\n  // Move b away\n  move.x = diff.x * factor * (mass1 / massT);\n  move.y = diff.y * factor * (mass1 / massT);\n  if (p2mass > 0) {\n    add(p2.cpos, p2.cpos, move);\n  }\n\n  if (!preserveInertia) return;\n\n  damping = damping || 1;\n\n  const f1 = (damping * (diff.x * vel1.x + diff.y * vel1.y)) / (dist2 || 1);\n  const f2 = (damping * (diff.x * vel2.x + diff.y * vel2.y)) / (dist2 || 1);\n\n  vel1.x += (f2 * diff.x - f1 * diff.x) / (mass1 || 1); // * (mass2 / massT);\n  vel2.x += (f1 * diff.x - f2 * diff.x) / (mass2 || 1); // * (mass1 / massT);\n  vel1.y += (f2 * diff.y - f1 * diff.y) / (mass1 || 1); // * (mass2 / massT);\n  vel2.y += (f1 * diff.y - f2 * diff.y) / (mass2 || 1); // * (mass1 / massT);\n\n  if (p1mass > 0) set(p1.ppos, p1.cpos.x - vel1.x, p1.cpos.y - vel1.y);\n  if (p2mass > 0) set(p2.ppos, p2.cpos.x - vel2.x, p2.cpos.y - vel2.y);\n};\n","import {\n  add,\n  distance2,\n  set,\n  sub,\n  v2,\n  dot,\n  scale,\n  distance,\n  copy,\n  normalize,\n  Vector2\n} from \"./v2\";\nimport { collideCircleCircle } from \"./collide-circle-circle\";\nimport { VelocityDerivable } from \"./common-types\";\n\n// Preallocations\nconst edgeDir = v2();\nconst edge = v2();\nconst prevEdge = v2();\nconst hypo = v2();\nconst epDiff = v2();\nconst correction = v2();\nconst collisionPoint = v2();\nconst tunnelPoint = v2();\n\nconst ep = {\n  cpos: v2(),\n  ppos: v2()\n};\n\nconst epBefore = {\n  cpos: v2(),\n  ppos: v2()\n};\n\nexport function collideCircleEdge(\n  circle: VelocityDerivable,\n  radius3: number,\n  mass3: number,\n  endpoint1: VelocityDerivable,\n  mass1: number,\n  endpoint2: VelocityDerivable,\n  mass2: number,\n  preserveInertia: boolean,\n  damping: number\n) {\n  // Edge direction (edge in local space)\n  sub(edge, endpoint2.cpos, endpoint1.cpos);\n\n  // Normalize collision edge (assume collision axis is edge)\n  normalize(edgeDir, edge);\n\n  // Vector from endpoint1 to particle\n  sub(hypo, circle.cpos, endpoint1.cpos);\n\n  // Where is the particle on the edge, before, after, or on?\n  // Also used for interpolation later.\n  const projection = dot(edge, hypo);\n  const maxDot = dot(edge, edge);\n  const edgeMag = Math.sqrt(maxDot);\n\n  // Colliding beyond the edge...\n  if (projection < 0 || projection > maxDot) return;\n\n  // Create interpolation factor of where point closest\n  // to particle is on the line.\n  const t = projection / maxDot;\n  const u = 1 - t;\n\n  // Find the point of collision on the edge.\n  scale(collisionPoint, edgeDir, t * edgeMag);\n  add(collisionPoint, collisionPoint, endpoint1.cpos);\n  const dist = distance(collisionPoint, circle.cpos);\n\n  // Bail if point and edge are too far apart.\n  if (dist > radius3) return;\n\n  // Distribute mass of colliding point into two fake points\n  // and use those to collide against each endpoint independently.\n\n  const standinMass1 = u * mass3;\n  const standinMass2 = t * mass3;\n\n  const standin1 = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  const standin2 = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  // Slide standin1 along edge to be in front of endpoint1\n  scale(standin1.cpos, edgeDir, t * edgeMag);\n  sub(standin1.cpos, circle.cpos, standin1.cpos);\n  scale(standin1.ppos, edgeDir, t * edgeMag);\n  sub(standin1.ppos, circle.ppos, standin1.ppos);\n\n  // Slide standin2 along edge to be in front of endpoint2\n  scale(standin2.cpos, edgeDir, u * edgeMag);\n  add(standin2.cpos, circle.cpos, standin2.cpos);\n  scale(standin2.ppos, edgeDir, u * edgeMag);\n  add(standin2.ppos, circle.ppos, standin2.ppos);\n\n  const standin1Before = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  const standin2Before = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  // Stash state of standins\n  copy(standin1Before.cpos, standin1.cpos);\n  copy(standin1Before.ppos, standin1.ppos);\n  copy(standin2Before.cpos, standin2.cpos);\n  copy(standin2Before.ppos, standin2.ppos);\n\n  const edgeRadius = 0;\n\n  // Collide standins with endpoints\n  collideCircleCircle(\n    standin1,\n    radius3,\n    standinMass1,\n    endpoint1,\n    edgeRadius,\n    mass1,\n    preserveInertia,\n    damping\n  );\n\n  collideCircleCircle(\n    standin2,\n    radius3,\n    standinMass2,\n    endpoint2,\n    edgeRadius,\n    mass2,\n    preserveInertia,\n    damping\n  );\n\n  const standin1Delta = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  const standin2Delta = {\n    cpos: v2(),\n    ppos: v2()\n  };\n\n  // Compute standin1 cpos change\n  sub(standin1Delta.cpos, standin1.cpos, standin1Before.cpos);\n\n  // Compute standin2 cpos change\n  sub(standin2Delta.cpos, standin2.cpos, standin2Before.cpos);\n\n  scale(standin1Delta.cpos, standin1Delta.cpos, u);\n  scale(standin2Delta.cpos, standin2Delta.cpos, t);\n\n  // Apply cpos changes to point3\n  add(circle.cpos, circle.cpos, standin1Delta.cpos);\n  add(circle.cpos, circle.cpos, standin2Delta.cpos);\n\n  if (!preserveInertia) return;\n\n  // TODO: instead of adding diff, get magnitude of diff and scale\n  // in reverse direction of standin velocity from point3.cpos because\n  // that is what circlecircle does.\n\n  // Compute standin1 ppos change\n  sub(standin1Delta.ppos, standin1.ppos, standin1Before.ppos);\n\n  // Compute standin2 ppos change\n  sub(standin2Delta.ppos, standin2.ppos, standin2Before.ppos);\n\n  scale(standin1Delta.ppos, standin1Delta.ppos, u);\n  scale(standin2Delta.ppos, standin2Delta.ppos, t);\n\n  // Apply ppos changes to point3\n  add(circle.ppos, circle.ppos, standin1Delta.ppos);\n  add(circle.ppos, circle.ppos, standin2Delta.ppos);\n}\n\ntype Particle = {\n  mass: number;\n  radius: number;\n} & VelocityDerivable;\n\nfunction snapshotDebug(\n  name: string,\n  particles: Particle[] = [],\n  points: [string, Vector2][] = []\n) {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  document.body.appendChild(cvs);\n  // let minX = Number.MAX_SAFE_INTEGER;\n  // let maxX = Number.MIN_SAFE_INTEGER;\n  // let minY = Number.MAX_SAFE_INTEGER;\n  // let maxY = Number.MIN_SAFE_INTEGER;\n  // for (let i = 0; i < particles.length; i++) {\n  //   const particle = particles[i];\n  //   minX = Math.min(\n  //     minX,\n  //     particle.cpos.x - particle.radius,\n  //     particle.ppos.x - particle.radius\n  //   );\n  //   maxX = Math.max(\n  //     maxX,\n  //     particle.cpos.x + particle.radius,\n  //     particle.ppos.x + particle.radius\n  //   );\n  //   minY = Math.min(\n  //     minY,\n  //     particle.cpos.y - particle.radius,\n  //     particle.ppos.y - particle.radius\n  //   );\n  //   maxY = Math.max(\n  //     maxY,\n  //     particle.cpos.y + particle.radius,\n  //     particle.ppos.y + particle.radius\n  //   );\n  // }\n\n  // for (let i = 0; i < points.length; i++) {\n  //   const [, point] = points[i];\n  //   minX = Math.min(minX, point.x, point.x);\n  //   maxX = Math.max(maxX, point.x, point.x);\n  //   minY = Math.min(minY, point.y, point.y);\n  //   maxY = Math.max(maxY, point.y, point.y);\n  // }\n\n  // cvs.width = maxX - minX;\n  // cvs.height = maxY - minY;\n\n  // ctx.translate(-minX, -minY);\n\n  cvs.width = 800;\n  cvs.height = 800;\n\n  for (let i = 0; i < particles.length; i++) {\n    const particle = particles[i];\n    ctx.fillStyle = \"rgba(255, 0, 0, 0.5)\";\n    ctx.beginPath();\n    ctx.arc(\n      particle.ppos.x,\n      particle.ppos.y,\n      particle.radius,\n      0,\n      Math.PI * 2,\n      false\n    );\n    ctx.fill();\n\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n    ctx.beginPath();\n    ctx.arc(\n      particle.cpos.x,\n      particle.cpos.y,\n      particle.radius,\n      0,\n      Math.PI * 2,\n      false\n    );\n    ctx.fill();\n  }\n\n  for (let i = 0; i < points.length; i++) {\n    const [name, point] = points[i];\n    ctx.fillStyle = \"purple\";\n    ctx.fillRect(point.x, point.y, 1, 1);\n    ctx.fillText(`${name} (${point.x},${point.y})`, point.x + 1, point.y + 1);\n  }\n\n  // ctx.translate(minX, minY);\n  ctx.fillStyle = \"black\";\n  ctx.fillText(name, 10, 10);\n}\n","import {\n  add,\n  dot,\n  magnitude,\n  normalize,\n  scale,\n  set,\n  copy,\n  sub,\n  v2,\n  Vector2\n} from \"./v2\";\n\n// Registers / Preallocations\n\nconst basis = v2();\nconst basisNeg = v2();\n\nconst vel1 = v2();\nconst vel1x = v2();\nconst vel1y = v2();\n\nconst vel2 = v2();\nconst vel2x = v2();\nconst vel2y = v2();\n\nconst newVel1 = v2();\nconst newVel2 = v2();\n\nconst t1 = v2();\nconst t2 = v2();\n\nconst u1 = v2();\nconst u2 = v2();\n\n// TODO: Put this somewhere...\nconst EPSILON = 0.0001;\n\n// TODO: change this API to accept numbers (x, y) instead of vectors\n\n// friction calc: sqrt(friction1*friction2)\n// restitution: box2d: https://github.com/erincatto/Box2D/blob/6a69ddbbd59b21c0d6699c43143b4114f7f92e21/Box2D/Box2D/Dynamics/Contacts/b2Contact.h#L42-L47\n// Math.max(restitution1, restitution2);\n\nexport const collisionResponseAABB = (\n  cpos1: Vector2,\n  ppos1: Vector2,\n  mass1: number,\n  restitution1: number,\n  staticFriction1: number,\n  dynamicFriction1: number,\n  cpos2: Vector2,\n  ppos2: Vector2,\n  mass2: number,\n  restitution2: number,\n  staticFriction2: number,\n  dynamicFriction2: number,\n  collisionNormal: Vector2,\n  vel1out: Vector2,\n  vel2out: Vector2\n) => {\n  // blank out all preallocated vectors.\n  set(basis, 0, 0);\n  set(basisNeg, 0, 0);\n  set(vel1, 0, 0);\n  set(vel1x, 0, 0);\n  set(vel1y, 0, 0);\n  set(vel2, 0, 0);\n  set(vel2x, 0, 0);\n  set(vel2y, 0, 0);\n  set(newVel1, 0, 0);\n  set(newVel2, 0, 0);\n  set(t1, 0, 0);\n  set(t2, 0, 0);\n  set(u1, 0, 0);\n  set(u2, 0, 0);\n\n  // If collisionNormal is provided, use it. Otherwise, use midpoint between\n  // current positions as axis of collision. Midpoint will model a circular\n  // collision if used.\n  if (collisionNormal && (collisionNormal.x !== 0 || collisionNormal.y !== 0)) {\n    set(basis, collisionNormal.x, collisionNormal.y);\n  } else {\n    sub(basis, cpos1, cpos2);\n    normalize(basis, basis);\n  }\n\n  scale(basisNeg, basis, -1);\n\n  //const friction;\n  // Take max of restitutions, like box2d does.\n  // https://github.com/erincatto/Box2D/blob/6a69ddbbd59b21c0d6699c43143b4114f7f92e21/Box2D/Box2D/Dynamics/Contacts/b2Contact.h#L42-L47\n  // \"for example, a superball bounces on everything\"\n  const restitution = restitution1 > restitution2 ? restitution1 : restitution2;\n  const massTotal = mass1 + mass2;\n  const e = 1 + restitution;\n\n  // I = (1+e)*N*(Vr • N) / (1/Ma + 1/Mb)\n  // Va -= I * 1/Ma\n  // Vb += I * 1/Mb\n  //sub(vel1, cpos1, ppos1);\n  //sub(vel2, cpos2, ppos2);\n  //const relativeVelocity = sub(vel1, vel2);\n  //const I = v2();\n  //scale(I, normal, (1 + restitution) * dot(relativeVelocity, normal));\n  //scale(I, I, 1 / (1/mass1 + 1/mass2));\n\n  // \"x\" and \"y\" in the following sections are shorthand for:\n  // x: component of the box velocity parallel to the collision normal\n  // y: the rest of the collision velocity\n\n  // calculate x-direction velocity vector and perpendicular y-vector for box 1\n  sub(vel1, cpos1, ppos1);\n  const x1 = dot(basis, vel1);\n  scale(vel1x, basis, x1);\n  sub(vel1y, vel1, vel1x);\n\n  // calculate x-direction velocity vector and perpendicular y-vector for box 2\n  sub(vel2, cpos2, ppos2);\n  const x2 = dot(basisNeg, vel2);\n  scale(vel2x, basisNeg, x2);\n  sub(vel2y, vel2, vel2x);\n\n  // equations of motion for box1\n  scale(t1, vel1x, (mass1 - mass2) / massTotal);\n  scale(t2, vel2x, (e * mass2) / massTotal);\n  add(newVel1, t1, t2);\n  add(newVel1, newVel1, vel1y);\n\n  // equations of motion for box2\n  scale(u1, vel1x, (e * mass1) / massTotal);\n  scale(u2, vel2x, (mass2 - mass1) / massTotal);\n  add(newVel2, u1, u2);\n  add(newVel2, newVel2, vel2y);\n\n  // new relative velocity\n  const rv = add(v2(), newVel1, newVel2);\n\n  // tangent to relative velocity vector\n  const reg1 = v2();\n  scale(reg1, basis, dot(rv, basis));\n  const tangent = sub(v2(), rv, reg1);\n  normalize(tangent, tangent);\n\n  // magnitude of relative velocity in tangent direction\n  let jt = -dot(rv, tangent);\n  jt /= 1 / (mass1 + mass2); // not sure about this...\n  // https://github.com/RandyGaul/ImpulseEngine/blob/d12af9c95555244a37dce1c7a73e60d5177df652/Manifold.cpp#L103\n\n  const jtMag = Math.abs(jt);\n\n  // only apply significant friction\n  if (jtMag > EPSILON) {\n    // magnitudes of velocity along the collision tangent, hopefully.\n    const vel1ymag = magnitude(vel1y);\n    const vel2ymag = magnitude(vel2y);\n\n    // compute Coulumb's law (choosing dynamic vs static friction)\n    const frictionImpulse1 = v2();\n    const frictionImpulse2 = v2();\n\n    // TODO: may need to use Math.max(Math.abs(vel1ymag, vel2ymag)) when\n    // choosing to incorporate velocity magnitude into the friction calc.\n    // A stationary box getting hit currently receives perfect energy\n    // transfer, since its vel2ymag is 0.\n\n    if (jtMag < vel1ymag * staticFriction1) {\n      scale(frictionImpulse1, tangent, staticFriction1);\n    } else {\n      scale(frictionImpulse1, tangent, -vel1ymag * dynamicFriction1);\n    }\n\n    if (jtMag < vel2ymag * staticFriction2) {\n      scale(frictionImpulse2, tangent, staticFriction2);\n    } else {\n      scale(frictionImpulse2, tangent, -vel2ymag * dynamicFriction2);\n    }\n\n    add(newVel1, newVel1, frictionImpulse1);\n    add(newVel2, newVel2, frictionImpulse2);\n  }\n\n  // output new velocity of box1 and box2\n  copy(vel1out, newVel1);\n  copy(vel2out, newVel2);\n};\n","import { add, distance2, set, sub, v2, magnitude, scale } from \"./v2\";\nimport { Integratable } from \"./common-types\";\n\n// negative or zero mass implies a fixed or \"pinned\" point\nexport function solveDistanceConstraint(\n  p1: Integratable,\n  p1mass: number,\n  p2: Integratable,\n  p2mass: number,\n  goal: number,\n  // number between 0 and 1\n  stiffness: number = 1\n) {\n  const mass1 = p1mass > 0 ? p1mass : 1;\n  const mass2 = p2mass > 0 ? p2mass : 1;\n  const imass1 = 1 / (mass1 || 1);\n  const imass2 = 1 / (mass2 || 1);\n  const imass = imass1 + imass2;\n\n  // Current relative vector\n  const delta = sub(v2(), p2.cpos, p1.cpos);\n  const deltaMag = magnitude(delta);\n\n  // nothing to do.\n  if (deltaMag === 0) return;\n\n  // Difference between current distance and goal distance\n  const diff = (deltaMag - goal) / deltaMag;\n\n  // TODO: is this even correct? Should mass come into effect here?\n  // approximate mass\n  scale(delta, delta, diff / imass);\n\n  // TODO: not sure if this is the right place to apply stiffness.\n  const p1correction = scale(v2(), delta, imass1 * stiffness);\n  const p2correction = scale(v2(), delta, imass2 * stiffness);\n\n  // Add correction to p1, but only if not \"pinned\".\n  // If it's pinned and p2 is not, apply it to p2.\n  if (p1mass > 0) {\n    add(p1.cpos, p1.cpos, p1correction);\n  } else if (p2mass > 0) {\n    sub(p2.cpos, p2.cpos, p1correction);\n  }\n\n  // Add correction to p2, but only if not \"pinned\".\n  // If it's pinned and p1 is not, apply it to p1.\n  if (p2mass > 0) {\n    sub(p2.cpos, p2.cpos, p2correction);\n  } else if (p1mass > 0) {\n    add(p1.cpos, p1.cpos, p2correction);\n  }\n}\n","import { VelocityDerivable } from \"./common-types\";\n\nexport const solveDrag = (p1: VelocityDerivable, drag: number) => {\n  const x = (p1.ppos.x - p1.cpos.x) * drag;\n  const y = (p1.ppos.y - p1.cpos.y) * drag;\n  p1.ppos.x = p1.cpos.x + x;\n  p1.ppos.y = p1.cpos.y + y;\n};","import { add, magnitude, normalize, scale, set, v2 } from \"./v2\";\nimport { Integratable, VelocityDerivable } from \"./common-types\";\nconst accel1 = v2();\n\nexport function solveGravitation(\n  p1: Integratable,\n  p1mass: number,\n  p2: VelocityDerivable,\n  p2mass: number,\n  gravityConstant = 0.99\n) {\n  // handle either obj not having mass\n  if (p1mass <= 0 || p2mass <= 0) return;\n\n  let mag: number;\n  let factor: number;\n\n  const diffx = p2.cpos.x - p1.cpos.x;\n  const diffy = p2.cpos.y - p1.cpos.y;\n\n  set(accel1, diffx, diffy);\n  mag = magnitude(accel1);\n\n  // Prevent divide by zero.\n  mag = mag === 0 ? 1 : mag;\n\n  // Newton's Law of Universal Gravitation -- Vector Form!\n  factor = gravityConstant * ((p1mass * p2mass) / (mag * mag));\n\n  // scale by gravity acceleration\n  normalize(accel1, accel1);\n  scale(accel1, accel1, factor);\n\n  // add the acceleration from gravity to p1 accel\n  add(p1.acel, p1.acel, accel1);\n}\n","import { set } from \"./v2\";\nimport { Integratable } from \"./common-types\";\n\nexport const inertia = (cmp: Integratable) => {\n  const x = cmp.cpos.x * 2 - cmp.ppos.x;\n  const y = cmp.cpos.y * 2 - cmp.ppos.y;\n\n  set(cmp.ppos, cmp.cpos.x, cmp.cpos.y);\n  set(cmp.cpos, x, y);\n};\n","import {\n  set,\n  Vector2,\n  normalize,\n} from './v2';\n\n// https://github.com/noonat/intersect/blob/master/intersect.js\n\nexport type AABBOverlapResult = {\n  resolve: Vector2; hitPos: Vector2; normal: Vector2;\n}\n\n/**\n * Compute the \"collision manifold\" for two AABB, storing the result in `result`.\n * Note: The `normal` is always perpendicular to an AABB edge, which may produce\n * some slighly weird-looking collisions. `collisionResponseAABB()` will compute\n * a normal using the midpoints, which looks more natural.\n */\nexport const overlapAABBAABB = (\n  center1X: number, center1Y: number, width1: number, height1: number,\n  center2X: number, center2Y: number, width2: number, height2: number,\n  result: AABBOverlapResult\n) => {\n\n  const dx = center2X - center1X;\n  const px = (width2 / 2) + (width1 / 2) - Math.abs(dx);\n  const dy = center2Y - center1Y;\n  const py = (height2 / 2) + (height1 / 2) - Math.abs(dy);\n\n  if (px <= 0) return null;\n  if (py <= 0) return null;\n\n  set(result.resolve, 0, 0);\n  set(result.hitPos, 0, 0);\n  set(result.normal, 0, 0);\n\n  if (px < py) {\n    const sx = dx < 0 ? -1 : 1;\n    result.resolve.x = px * sx;\n    result.normal.x = sx;\n    // Really not sure about these values.\n    result.hitPos.x = center1X + (width1 / 2 * sx);\n    result.hitPos.y = center2Y;\n  } else {\n    const sy = dy < 0 ? -1 : 1;\n    result.resolve.y = py * sy;\n    result.normal.y = sy;\n    // Really not sure about these values.\n    result.hitPos.x = center2X;\n    result.hitPos.y = center1Y + (height1 / 2 * sy);\n  }\n\n  return result;\n}\n","export const overlapCircleCircle = (\n  ax: number,\n  ay: number,\n  arad: number,\n  bx: number,\n  by: number,\n  brad: number\n) => {\n  const x = bx - ax;\n  const y = by - ay;\n  const rad = arad + brad;\n  return x * x + y * y < rad * rad;\n};\n","import { sub, v2, Vector2 } from \"./v2\";\n\nconst s1 = v2();\nconst s2 = v2();\n\nexport function segmentIntersection(\n  p0: Vector2,\n  p1: Vector2,\n  p2: Vector2,\n  p3: Vector2,\n  intersectionPoint: Vector2\n) {\n  sub(s1, p1, p0);\n  sub(s2, p3, p2);\n\n  const s =\n    (-s1.y * (p0.x - p2.x) + s1.x * (p0.y - p2.y)) /\n    (-s2.x * s1.y + s1.x * s2.y);\n  const t =\n    (s2.x * (p0.y - p2.y) - s2.y * (p0.x - p2.x)) /\n    (-s2.x * s1.y + s1.x * s2.y);\n\n  if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n    // Collision detected\n    intersectionPoint.x = p0.x + t * s1.x;\n    intersectionPoint.y = p0.y + t * s1.y;\n    return true;\n  }\n\n  return false;\n}\n","import { sub, v2, Vector2, scale, normalize, add } from \"./v2\";\nimport { segmentIntersection } from \"./segment-intersection\";\nimport { Integratable } from \"./common-types\";\n\nconst tunnelPoint = v2();\nconst offset = v2();\n\nconst v = v2();\nconst direction = v2();\nconst radiusSegment = v2();\nconst cposIncludingRadius = v2();\n\nexport function rewindToCollisionPoint(\n  point3: Integratable,\n  radius3: number,\n  point1: Integratable,\n  point2: Integratable\n): boolean {\n  // detect if a collision has occurred but would have been missed due to\n  // point3 moving beyond the edge in one time step.\n  \n  // TODO: this should accept some sort of manifold or collision contact object,\n  // not randum args (radius, etc). Without a manifold it's imposible to know \n  // if the point \"tunneled\" due to a collision or the result of _resolving_\n  // a collision!\n\n  // Compute where the cpos would be if the segment actually included the\n  // radius.\n  // Without this, we would rewind to the point3 center, and the direction\n  // of two points colliding with each other exactly is undefined.\n  sub(v, point3.cpos, point3.ppos);\n  normalize(direction, v);\n  scale(radiusSegment, direction, radius3);\n  add(cposIncludingRadius, radiusSegment, point3.cpos);\n\n  const hasTunneled = segmentIntersection(\n    cposIncludingRadius,\n    point3.ppos,\n    point1.cpos,\n    point2.cpos,\n    tunnelPoint\n  );\n\n  if (!hasTunneled) return false;\n\n  // Translate point3 to tunnelPoint, including the radius of the point.\n  sub(offset, cposIncludingRadius, tunnelPoint);\n  \n  sub(point3.cpos, point3.cpos, offset);\n  sub(point3.ppos, point3.ppos, offset);\n  return true;\n}\n\nfunction debuggerIfNaN(point: Vector2) {\n  if (isNaN(point.x) || isNaN(point.y)) {\n    debugger;\n  }\n}\n","import {\n  Vector2,\n  sub,\n  v2,\n  normal,\n  dot,\n  distance,\n  set,\n} from \"./v2\";\n\nexport type PointEdgeProjection = {\n  // distance between the point and the projected point on the line\n  distance: number;\n  // dot product between edge normal (perp of endpoint1 -> endpoint2) and normal\n  // from edge to point. If positive, they are pointing in the same direction\n  // (aka the point is on the side of the segment in the direction of the\n  // normal). If negative, the point is on the opposite side. The absolute value\n  // of this will always match the distance.\n  similarity: number;\n  // What percentage along the line the projection is. < 0 means behind the\n  // edge, > 1 means ahead of the edge endpoints.\n  u: number;\n  // The point in absolute space of the projection along the edge\n  projectedPoint: Vector2;\n  // The normal of the edge (endpoint1 -> endpoint2): Given v1(0,0) -> v2(10, 0), the normal will be (0, 1)\n  edgeNormal: Vector2;\n};\n\nconst edgeDelta = v2();\nconst perp = v2();\n\nexport function projectPointEdge(\n  point: Vector2,\n  endpoint1: Vector2,\n  endpoint2: Vector2,\n  result: PointEdgeProjection\n) {\n  sub(edgeDelta, endpoint2, endpoint1);\n  if (edgeDelta.x === 0 && edgeDelta.y === 0) {\n    throw new Error('ZeroLengthEdge');\n  }\n\n  // http://paulbourke.net/geometry/pointlineplane/\n  // http://paulbourke.net/geometry/pointlineplane/DistancePoint.java\n  const u =\n    ((point.x - endpoint1.x) * edgeDelta.x + (point.y - endpoint1.y) * edgeDelta.y) /\n    (edgeDelta.x * edgeDelta.x + edgeDelta.y * edgeDelta.y);\n\n  result.u = u;\n\n  const proj = set(\n    result.projectedPoint,\n    endpoint1.x + u * edgeDelta.x,\n    endpoint1.y + u * edgeDelta.y\n  );\n\n  result.distance = distance(proj, point);\n\n  // given:\n  // E1----------------------E2        Proj\n  //           |                        |\n  //           | EdgeNorm               | perp\n  //           |                       Point\n  // \n  // What is the similarity (dot product) between EdgeNorm and Perp?\n  const edgeNorm = normal(result.edgeNormal, endpoint1, endpoint2);\n  sub(perp, point, proj);\n  result.similarity = dot(edgeNorm, perp);\n}\n","\n// I would prefer to name all the exports here to prevent name clobbering,\n// but Babel cannot know if a named export is a Type or not. So even loading\n// this transpiled file in a project will cause failures when a builder,\n// like webpack or rollup, tries to resolve a Type as a code export.\n\nexport * from \"./accelerate\";\nexport * from \"./collide-circle-circle\";\nexport * from \"./collide-circle-edge\";\nexport * from \"./collision-response-aabb\";\nexport * from \"./solve-distance-constraint\";\nexport * from \"./solve-drag\";\nexport * from \"./solve-gravitation\";\nexport * from \"./inertia\";\nexport * from \"./overlap-aabb-aabb\";\nexport * from \"./overlap-circle-circle\";\nexport * from \"./rewind-to-collision-point\";\nexport * from \"./segment-intersection\";\nexport * from \"./v2\";\nexport * from \"./common-types\";\nexport * from './project-point-edge';\n","import scihalt from \"science-halt\";\nimport {\n  add,\n  scale,\n  sub,\n  v2,\n  AABBOverlapResult,\n  accelerate,\n  inertia,\n  overlapAABBAABB,\n  collisionResponseAABB\n} from \"../src\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  const box1 = {\n    cpos: v2(350, 90),\n    ppos: v2(349, 80),\n    acel: v2(),\n    w: 100,\n    h: 150,\n    mass: 10\n  };\n\n  const box2 = {\n    cpos: v2(350, 600),\n    ppos: v2(350, 600),\n    acel: v2(),\n    w: 100,\n    h: 150,\n    mass: 10\n  };\n\n  type Box = typeof box1;\n\n  const points: Box[] = [];\n  const collision: AABBOverlapResult = {\n    resolve: v2(),\n    hitPos: v2(),\n    normal: v2()\n  };\n\n  points.push(box1, box2);\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  (function step() {\n    const dt = 1;\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      accelerate(point, dt);\n    }\n\n    const isOverlapping = overlapAABBAABB(\n      box1.cpos.x,\n      box1.cpos.y,\n      box1.w,\n      box1.h,\n      box2.cpos.x,\n      box2.cpos.y,\n      box2.w,\n      box2.h,\n      collision\n    );\n\n    if (isOverlapping) {\n      // for debugging\n      render(points, ctx);\n\n      // move to non-overlapping position\n      const overlapHalf = scale(v2(), collision.resolve, 0.5);\n      add(box2.cpos, box2.cpos, overlapHalf);\n      add(box2.ppos, box2.ppos, overlapHalf);\n      sub(box1.cpos, box1.cpos, overlapHalf);\n      sub(box1.ppos, box1.ppos, overlapHalf);\n\n      // for debugging\n      render(points, ctx);\n\n      const box1v = v2();\n      const box2v = v2();\n\n      const restitution = 1;\n      const staticFriction = 0.9;\n      const dynamicFriction = 0.01;\n\n      collisionResponseAABB(\n        box1.cpos,\n        box1.ppos,\n        box1.mass,\n        restitution,\n        staticFriction,\n        dynamicFriction,\n        box2.cpos,\n        box2.ppos,\n        box2.mass,\n        restitution,\n        staticFriction,\n        dynamicFriction,\n        // Allow the response function to recompute a normal based on the\n        // axis between the centers of the boxes. this produces a more\n        // natural looking collision.\n        // collision.normal,\n        v2(),\n        box1v,\n        box2v\n      );\n\n      // Apply the new velocity\n      sub(box1.ppos, box1.cpos, box1v);\n      sub(box2.ppos, box2.cpos, box2v);\n\n      // for debugging\n      render(points, ctx);\n    }\n\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      inertia(point);\n    }\n\n    render(points, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function render(points: Box[], ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(\n        point.ppos.x - point.w / 2,\n        point.ppos.y - point.h / 2,\n        point.w,\n        point.h\n      );\n\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(\n        point.cpos.x - point.w / 2,\n        point.cpos.y - point.h / 2,\n        point.w,\n        point.h\n      );\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  add,\n  distance,\n  scale,\n  sub,\n  v2,\n  accelerate,\n  inertia,\n  solveGravitation,\n  overlapAABBAABB,\n  collisionResponseAABB,\n  AABBOverlapResult,\n  copy\n} from \"../src/index\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type Box = ReturnType<typeof makeBox>;\n\n  const points: Box[] = [];\n\n  for (let count = 25, i = 0; i < count; i++) {\n    const centerX = cvs.width / 2;\n    const centerY = cvs.height / 2;\n    const distance = Math.min(centerX, centerY) * 0.5;\n    const cos = Math.cos(i);\n    const sin = Math.sin(i);\n    const x = centerX + cos * distance;\n    const y = centerY + sin * distance;\n    points.push(makeBox(x, y));\n  }\n\n  const GRAVITATIONAL_POINT = {\n    cpos: v2(cvs.width / 2, cvs.height / 2),\n    ppos: v2(cvs.width / 2, cvs.height / 2),\n    acel: v2(),\n    mass: 100000\n  };\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  (function step() {\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      const dist = distance(point.cpos, GRAVITATIONAL_POINT.cpos);\n      dist > 100 &&\n        solveGravitation(\n          point,\n          point.mass,\n          GRAVITATIONAL_POINT,\n          GRAVITATIONAL_POINT.mass\n        );\n    }\n\n    const dt = 1;\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      accelerate(point, dt);\n    }\n\n    const collisions = [];\n    const handled = [];\n    const collision: AABBOverlapResult = {\n      resolve: v2(),\n      hitPos: v2(),\n      normal: v2()\n    };\n\n    for (let i = 0; i < points.length; i++) {\n      for (let j = i + 1; j < points.length; j++) {\n        const box1 = points[i];\n        const box2 = points[j];\n        const isOverlapping = overlapAABBAABB(\n          box1.cpos.x,\n          box1.cpos.y,\n          box1.w,\n          box1.h,\n          box2.cpos.x,\n          box2.cpos.y,\n          box2.w,\n          box2.h,\n          collision\n        );\n\n        if (\n          isOverlapping &&\n          handled.indexOf(box1.id + \",\" + box2.id) === -1 &&\n          handled.indexOf(box2.id + \",\" + box1.id) === -1\n        ) {\n          // move to non-overlapping position\n          const overlapHalf = scale(v2(), collision.resolve, 0.5);\n          add(box2.cpos, box2.cpos, overlapHalf);\n          add(box2.ppos, box2.ppos, overlapHalf);\n          sub(box1.cpos, box1.cpos, overlapHalf);\n          sub(box1.ppos, box1.ppos, overlapHalf);\n\n          // for debugging\n          render(points, ctx);\n\n          const box1v = v2();\n          const box2v = v2();\n\n          const restitution = 1;\n          const staticFriction = 0.9;\n          const dynamicFriction = 0.01;\n\n          collisionResponseAABB(\n            box1.cpos,\n            box1.ppos,\n            box1.mass,\n            restitution,\n            staticFriction,\n            dynamicFriction,\n            box2.cpos,\n            box2.ppos,\n            box2.mass,\n            restitution,\n            staticFriction,\n            dynamicFriction,\n            // Allow the response function to recompute a normal based on the\n            // axis between the centers of the boxes. this produces a more\n            // natural looking collision.\n            // collision.normal,\n            v2(),\n            box1v,\n            box2v\n          );\n\n          // Apply the new velocity\n          sub(box1.ppos, box1.cpos, box1v);\n          sub(box2.ppos, box2.cpos, box2v);\n\n          // for debugging\n          render(points, ctx);\n\n          handled.push(box1.id + \",\" + box2.id);\n          handled.push(box2.id + \",\" + box1.id);\n        }\n      }\n    }\n\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      inertia(point);\n    }\n\n    render(points, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function makeBox(x: number, y: number) {\n    return {\n      id: \"id-\" + Math.floor(Math.random() * 10000000),\n      cpos: v2(x, y),\n      ppos: v2(x, y),\n      acel: v2(),\n      mass: 10,\n      w: 10,\n      h: 10\n    };\n  }\n\n  function render(points: Box[], ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(\n        point.ppos.x - point.w / 2,\n        point.ppos.y - point.h / 2,\n        point.w,\n        point.h\n      );\n\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(\n        point.cpos.x - point.w / 2,\n        point.cpos.y - point.h / 2,\n        point.w,\n        point.h\n      );\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  add,\n  copy,\n  normalize,\n  scale,\n  sub,\n  v2,\n  accelerate,\n  inertia,\n  solveGravitation,\n  overlapCircleCircle,\n  collideCircleCircle,\n  Vector2\n} from \"../src/index\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type Point = (ReturnType<typeof generatePoints>)[0];\n\n  // generate a circle of circles\n  const CENTER = { x: 400, y: 400 };\n  const GRAVITATIONAL_POINT = {\n    cpos: copy(v2(), CENTER),\n    ppos: copy(v2(), CENTER),\n    acel: v2(),\n    radius: 20,\n    mass: 10000\n  };\n  const RADIUS = 15;\n  const DAMPING = 0.1;\n  const points = generatePoints(CENTER, RADIUS, 40);\n  const colliding: Point[] = [];\n\n  points.unshift(GRAVITATIONAL_POINT);\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  (function step() {\n    const force = v2();\n    const dt = 16;\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      if (point !== GRAVITATIONAL_POINT) {\n        solveGravitation(\n          point,\n          point.mass,\n          GRAVITATIONAL_POINT,\n          GRAVITATIONAL_POINT.mass\n        );\n        //sub(force, GRAVITATIONAL_POINT.cpos, point.cpos);\n        //normalize(force, force);\n        //scale(force, force, 50);\n        //add(point.acel, point.acel, force);\n      }\n      accelerate(point, dt);\n    }\n\n    collisionPairs(colliding, points);\n\n    for (let i = 0; i < colliding.length; i += 2) {\n      const pointA = colliding[i];\n      const pointB = colliding[i + 1];\n      collideCircleCircle(\n        pointA,\n        pointA.radius,\n        pointA.mass,\n        pointB,\n        pointB.radius,\n        pointB.mass,\n        false,\n        DAMPING\n      );\n    }\n\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      inertia(point);\n    }\n\n    // TODO: the original demo code technically \"detects\" collisions with each\n    // iteration, but when we do this, it actually becomes more unstable. \n    // collisionPairs(colliding, points);\n\n    for (let i = 0; i < colliding.length; i += 2) {\n      const pointA = colliding[i];\n      const pointB = colliding[i + 1];\n      collideCircleCircle(\n        pointA,\n        pointA.radius,\n        pointA.mass,\n        pointB,\n        pointB.radius,\n        pointB.mass,\n        true,\n        DAMPING\n      );\n    }\n\n    render(points, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function collisionPairs(pairs: Point[], points: Point[]) {\n    pairs.length = 0;\n\n    for (let i = 0; i < points.length; i++) {\n      const pointA = points[i];\n      for (let j = i + 1; j < points.length; j++) {\n        const pointB = points[j];\n        if (\n          overlapCircleCircle(\n            pointA.cpos.x,\n            pointA.cpos.y,\n            pointA.radius,\n            pointB.cpos.x,\n            pointB.cpos.y,\n            pointB.radius\n          )\n        ) {\n          pairs.push(pointA, pointB);\n        }\n      }\n    }\n\n    return pairs;\n  }\n\n  function generatePoints(center: Vector2, baseRadius: number, num: number) {\n    const all = [];\n    const minRadius = 10;\n    for (let i = 0; i < num; i++) {\n      const x = Math.cos(i) * center.x + center.x;\n      const y = Math.sin(i) * center.y + center.y;\n      all.push({\n        cpos: { x, y },\n        ppos: { x, y },\n        acel: { x: 0, y: 0 },\n        radius: Math.max(\n          Math.abs(Math.cos(i) + Math.sin(i)) * baseRadius,\n          minRadius\n        ),\n        mass: Math.max(Math.abs(Math.cos(i) + Math.sin(i)) * 1, 1)\n      });\n    }\n    return all;\n  }\n\n  function render(points: Point[], ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.beginPath();\n      ctx.arc(point.ppos.x, point.ppos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n\n      ctx.fillStyle = \"black\";\n      ctx.beginPath();\n      ctx.arc(point.cpos.x, point.cpos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  add,\n  copy,\n  normalize,\n  scale,\n  sub,\n  v2,\n  accelerate,\n  inertia,\n  solveGravitation,\n  overlapCircleCircle,\n  collideCircleCircle,\n  collideCircleEdge,\n  solveDistanceConstraint,\n  rewindToCollisionPoint,\n  Vector2,\n  VelocityDerivable,\n  distance,\n  Integratable\n} from \"../src/index\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type CollidableLine = {\n    point1: CollidableCircle;\n    point2: CollidableCircle;\n  };\n\n  type CollidableCircle = {\n    mass: number;\n    radius: number;\n  } & Integratable;\n\n  type DistanceConstraint = {\n    point1: Exclude<CollidableCircle, \"radius\">;\n    point2: Exclude<CollidableCircle, \"radius\">;\n    goal: number;\n  };\n\n  const CONSTRAINT_ITERATIONS = 2;\n\n  const circles: CollidableCircle[] = [];\n  const lines: CollidableLine[] = [];\n  const constraints: DistanceConstraint[] = [];\n\n  const box = makeBox(300, 200, 100, 200);\n  circles.push(...box.circles);\n  lines.push(...box.lines);\n  constraints.push(...box.constraints);\n\n  circles.push({\n    cpos: v2(500, 390),\n    ppos: v2(510, 390),\n    acel: v2(0, 0),\n    mass: 100,\n    radius: 10\n  });\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  (function step() {\n    const dt = 16;\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n      accelerate(circle, dt);\n    }\n\n    for (let i = 0; i < CONSTRAINT_ITERATIONS; i++) {\n      for (let j = 0; j < constraints.length; j++) {\n        const constraint = constraints[j];\n        solveDistanceConstraint(\n          constraint.point1,\n          constraint.point1.mass,\n          constraint.point2,\n          constraint.point2.mass,\n          constraint.goal\n        );\n      }\n    }\n\n    collideCircles(circles, false);\n    collideEdges(lines, circles, false);\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n      inertia(circle);\n    }\n\n    collideCircles(circles, true);\n    collideEdges(lines, circles, true);\n\n    render(circles, lines, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function makeBox(x: number, y: number, width: number, height: number) {\n    const lines: CollidableLine[] = [];\n    const circles: CollidableCircle[] = [];\n    const constraints: DistanceConstraint[] = [];\n    const points = [\n      v2(x, y),\n      v2(x + width, y),\n      v2(x + width, y + height),\n      v2(x, y + height)\n    ];\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      const prev = circles.length === 0 ? null : circles[i - 1];\n      const circle = {\n        cpos: copy(v2(), point),\n        ppos: copy(v2(), point),\n        acel: v2(0, 0),\n        mass: i === 0 ? -1 : 1,\n        radius: 1\n      };\n      if (prev) {\n        lines.push({\n          point1: prev,\n          point2: circle\n        });\n\n        constraints.push({\n          point1: prev,\n          point2: circle,\n          goal: distance(point, prev.cpos)\n        });\n      }\n      circles.push(circle);\n    }\n\n    lines.push({\n      point1: circles[circles.length - 1],\n      point2: circles[0]\n    });\n\n    constraints.push({\n      point1: circles[circles.length - 1],\n      point2: circles[0],\n      goal: distance(circles[circles.length - 1].cpos, circles[0].cpos)\n    });\n\n    constraints.push({\n      point1: circles[0],\n      point2: circles[2],\n      goal: distance(circles[0].cpos, circles[2].cpos)\n    });\n\n    return {\n      lines,\n      circles,\n      constraints\n    };\n  }\n\n  function collideCircles(\n    circles: CollidableCircle[],\n    preserveInertia: boolean,\n    damping = 0.9\n  ) {\n    for (let i = 0; i < circles.length; i++) {\n      const a = circles[i];\n      for (let j = i + 1; j < circles.length; j++) {\n        const b = circles[j];\n        if (\n          !overlapCircleCircle(\n            a.cpos.x,\n            a.cpos.y,\n            a.radius,\n            b.cpos.x,\n            b.cpos.y,\n            b.radius\n          )\n        )\n          continue;\n        collideCircleCircle(\n          a,\n          a.radius,\n          a.mass,\n          b,\n          b.radius,\n          b.mass,\n          preserveInertia,\n          damping\n        );\n      }\n    }\n  }\n\n  function collideEdges(\n    lines: CollidableLine[],\n    circles: CollidableCircle[],\n    preserveInertia: boolean,\n    damping = 0.9\n  ) {\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      for (let j = 0; j < circles.length; j++) {\n        const circle = circles[j];\n        // Don't collide with yourself! This would be very very bad.\n        if (line.point1 == circle || line.point2 === circle) continue;\n        if (!preserveInertia)\n          rewindToCollisionPoint(\n            circle,\n            circle.radius,\n            line.point1,\n            line.point2\n          );\n        collideCircleEdge(\n          circle,\n          circle.radius,\n          circle.mass,\n          line.point1,\n          line.point1.mass,\n          line.point2,\n          line.point2.mass,\n          preserveInertia,\n          damping\n        );\n      }\n    }\n  }\n\n  function render(\n    circles: CollidableCircle[],\n    segments: CollidableLine[],\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < circles.length; i++) {\n      const point = circles[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.beginPath();\n      ctx.arc(point.ppos.x, point.ppos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n\n      ctx.fillStyle = \"black\";\n      ctx.beginPath();\n      ctx.arc(point.cpos.x, point.cpos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      ctx.strokeStyle = \"red\";\n      ctx.beginPath();\n      ctx.moveTo(segment.point1.ppos.x, segment.point1.ppos.y);\n      ctx.lineTo(segment.point2.ppos.x, segment.point2.ppos.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.strokeStyle = \"black\";\n      ctx.moveTo(segment.point1.cpos.x, segment.point1.cpos.y);\n      ctx.lineTo(segment.point2.cpos.x, segment.point2.cpos.y);\n      ctx.stroke();\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  Vector2,\n  v2,\n  accelerate,\n  inertia,\n  add,\n  collideCircleEdge,\n  rewindToCollisionPoint,\n  solveDistanceConstraint\n} from \"../src\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.tabIndex = 1; // for keyboard events\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type CollidableLine = {\n    point1: CollidableCircle;\n    point2: CollidableCircle;\n    goal: number;\n  };\n\n  type CollidableCircle = {\n    cpos: Vector2;\n    ppos: Vector2;\n    acel: Vector2;\n    mass: number;\n    radius: number;\n  };\n\n  const player: CollidableCircle = {\n    cpos: v2(600, 0),\n    ppos: v2(600, 0),\n    acel: v2(0, 0),\n    mass: 1,\n    radius: 20\n  };\n\n  const GRAVITY = 0.8;\n\n  const platform: CollidableLine = {\n    point1: {\n      cpos: v2(100, 300),\n      ppos: v2(100, 300),\n      acel: v2(0, 0),\n      // mass: 100000000,\n      mass: -1,\n      radius: 0\n    },\n    point2: {\n      cpos: v2(700, 300),\n      ppos: v2(700, 300),\n      acel: v2(0, 0),\n      // mass: 100000000,\n      // mass: -1,\n      mass: -1,\n      radius: 0\n    },\n    goal: 500\n  };\n\n  const circles: CollidableCircle[] = [\n    player,\n    platform.point1,\n    platform.point2\n  ];\n\n  const tunnelPoint = v2();\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  // const keys: { [key: string]: boolean } = {};\n  // cvs.addEventListener(\"keydown\", e => {\n  //   keys[e.key] = true;\n  //   e.preventDefault();\n  // });\n  // document.body.addEventListener(\"keyup\", e => {\n  //   keys[e.key] = false;\n  //   e.preventDefault();\n  // });\n\n  (function step() {\n    const dt = 16;\n\n    // gravity!\n    add(player.acel, player.acel, v2(0, GRAVITY));\n\n    for (let i = 0; i < circles.length; i++) {\n      const box = circles[i];\n      accelerate(box, dt);\n    }\n\n    rewindToCollisionPoint(player, player.radius, platform.point1, platform.point2);\n\n    collideCircleEdge(\n      player,\n      player.radius,\n      player.mass,\n      platform.point1,\n      platform.point1.mass,\n      platform.point2,\n      platform.point2.mass,\n      false,\n      0.9\n    );\n\n    for (let i = 0; i < circles.length; i++) {\n      const box = circles[i];\n      inertia(box);\n    }\n\n    collideCircleEdge(\n      player,\n      player.radius,\n      player.mass,\n      platform.point1,\n      platform.point1.mass,\n      platform.point2,\n      platform.point2.mass,\n      true,\n      0.9\n    );\n\n    for (let i = 0; i < 5; i++) {\n      solveDistanceConstraint(\n        platform.point1,\n        platform.point1.mass,\n        platform.point2,\n        platform.point2.mass,\n        platform.goal\n      );\n    }\n\n    render(circles, [platform], ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function render(\n    circles: CollidableCircle[],\n    segments: CollidableLine[],\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < circles.length; i++) {\n      const point = circles[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.beginPath();\n      ctx.arc(point.ppos.x, point.ppos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n\n      ctx.fillStyle = \"black\";\n      ctx.beginPath();\n      ctx.arc(point.cpos.x, point.cpos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      ctx.strokeStyle = \"red\";\n      ctx.beginPath();\n      ctx.moveTo(segment.point1.ppos.x, segment.point1.ppos.y);\n      ctx.lineTo(segment.point2.ppos.x, segment.point2.ppos.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.strokeStyle = \"black\";\n      ctx.moveTo(segment.point1.cpos.x, segment.point1.cpos.y);\n      ctx.lineTo(segment.point2.cpos.x, segment.point2.cpos.y);\n      ctx.stroke();\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  Vector2,\n  v2,\n  accelerate,\n  overlapAABBAABB,\n  AABBOverlapResult,\n  inertia,\n  add,\n  scale,\n  collisionResponseAABB,\n  sub,\n  translate\n} from \"../src\";\n\nexport const start = () => {\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.tabIndex = 1; // for keyboard events\n  cvs.width = cvs.height = 800;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type CollidableBox = {\n    cpos: Vector2;\n    ppos: Vector2;\n    acel: Vector2;\n    width: number;\n    height: number;\n    mass: number;\n  };\n\n  const player: CollidableBox = {\n    cpos: v2(400, 0),\n    ppos: v2(400, 0),\n    acel: v2(0, 0),\n    width: 50,\n    height: 75,\n    mass: 1\n  };\n\n  const PLAYER_HOR_ACEL = 5;\n  const GRAVITY = 9.8;\n\n  const platform: CollidableBox = {\n    cpos: v2(400, 700),\n    ppos: v2(400, 700),\n    acel: v2(0, 0),\n    width: 800,\n    height: 100,\n    mass: Number.MAX_SAFE_INTEGER - 100000\n  };\n\n  const boxes: CollidableBox[] = [player, platform];\n\n  const collision: AABBOverlapResult = {\n    resolve: v2(),\n    hitPos: v2(),\n    normal: v2()\n  };\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  const keys: { [key: string]: boolean } = {};\n  cvs.addEventListener(\"keydown\", e => {\n    keys[e.key] = true;\n    e.preventDefault();\n  });\n  document.body.addEventListener(\"keyup\", e => {\n    keys[e.key] = false;\n    e.preventDefault();\n  });\n\n  (function step() {\n    const dt = 16;\n\n    // gravity!\n    add(player.acel, player.acel, v2(0, GRAVITY));\n\n    for (let i = 0; i < boxes.length; i++) {\n      const box = boxes[i];\n      accelerate(box, dt);\n    }\n\n    const isOverlapping = overlapAABBAABB(\n      player.cpos.x,\n      player.cpos.y,\n      player.width,\n      player.height,\n      platform.cpos.x,\n      platform.cpos.y,\n      platform.width,\n      platform.height,\n      collision\n    );\n\n    if (isOverlapping) {\n      // Move to non-overlapping positions\n      const negativeResolve = scale(v2(), collision.resolve, -1);\n      // translate(overlapHalf, platform.cpos, platform.ppos);\n      translate(negativeResolve, player.cpos, player.ppos);\n\n      // for debugging\n      render(boxes, ctx);\n\n      // We will put the new relative velocity vectors here.\n      const box1v = v2();\n      const box2v = v2();\n\n      const restitution = 1;\n      const staticFriction = 0.9;\n      const dynamicFriction = 0.1;\n\n      collisionResponseAABB(\n        player.cpos,\n        player.ppos,\n        player.mass,\n        restitution,\n        staticFriction,\n        dynamicFriction,\n        platform.cpos,\n        platform.ppos,\n        platform.mass,\n        restitution,\n        staticFriction,\n        dynamicFriction,\n        collision.normal,\n        box1v,\n        box2v\n      );\n\n      // Apply the new velocity\n      sub(player.ppos, player.cpos, box1v);\n      // Kill vertical velocity\n      player.ppos.y = player.cpos.y;\n\n      // for debugging\n      render(boxes, ctx);\n    }\n\n    // Movement in the air is less powerful than on the ground!\n\n    if (keys.ArrowLeft) {\n      add(\n        player.acel,\n        player.acel,\n        v2(isOverlapping ? -PLAYER_HOR_ACEL : -PLAYER_HOR_ACEL / 10, 0)\n      );\n    }\n\n    if (keys.ArrowRight) {\n      add(\n        player.acel,\n        player.acel,\n        v2(isOverlapping ? PLAYER_HOR_ACEL : PLAYER_HOR_ACEL / 10, 0)\n      );\n    }\n\n    // we were overlapping, so probably ok to jump!\n    if (isOverlapping && keys.ArrowUp && player.cpos.y - player.ppos.y === 0) {\n      add(player.acel, player.acel, v2(0, -GRAVITY * 10));\n    }\n\n    for (let i = 0; i < boxes.length; i++) {\n      const box = boxes[i];\n      inertia(box);\n    }\n\n    render(boxes, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function render(boxes: CollidableBox[], ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < boxes.length; i++) {\n      const box = boxes[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(\n        box.ppos.x - box.width / 2,\n        box.ppos.y - box.height / 2,\n        box.width,\n        box.height\n      );\n\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(\n        box.cpos.x - box.width / 2,\n        box.cpos.y - box.height / 2,\n        box.width,\n        box.height\n      );\n    }\n  }\n};\n","import scihalt from \"science-halt\";\nimport {\n  Vector2,\n  v2,\n  copy,\n  accelerate,\n  inertia,\n  add,\n  distance,\n  collideCircleEdge,\n  rewindToCollisionPoint,\n  collideCircleCircle,\n  overlapCircleCircle,\n  segmentIntersection,\n  sub,\n  normalize,\n  scale,\n  normal,\n  dot,\n  solveDistanceConstraint,\n  projectPointEdge,\n  PointEdgeProjection\n} from \"../src\";\n\nexport const start = () => {\n  const width = 800;\n  const cvs = document.createElement(\"canvas\");\n  const ctx = cvs.getContext(\"2d\")!;\n  cvs.tabIndex = 1; // for keyboard events\n  cvs.width = cvs.height = width;\n  cvs.style.border = \"1px solid gray\";\n  document.body.appendChild(cvs);\n\n  type CollidableLine = {\n    point1: CollidableCircle;\n    point2: CollidableCircle;\n  };\n\n  type CollidableCircle = {\n    cpos: Vector2;\n    ppos: Vector2;\n    acel: Vector2;\n    mass: number;\n    radius: number;\n  };\n\n  type DistanceConstraint = {\n    point1: Exclude<CollidableCircle, \"radius\">;\n    point2: Exclude<CollidableCircle, \"radius\">;\n    goal: number;\n  };\n\n  const GRAVITY = 0.8;\n  const CONSTRAINT_ITERS = 5;\n\n  const lines: CollidableLine[] = [];\n  const constraints: DistanceConstraint[] = [];\n  const circles: CollidableCircle[] = [];\n\n  const bucket = makeStaticMesh([\n    v2(50, 50),\n    v2(width - 50, 50),\n    v2(width - 50, width - 50),\n    v2(50, width - 50)\n  ]);\n\n  const midLine = makeStaticMesh([\n    v2(500, width / 2),\n    v2(width - 500, width / 2 + 200)\n  ]);\n  midLine.pop(); // remove the double link back to beginning\n  lines.push(...bucket, ...midLine);\n\n  circles.push(...makeCircles(v2(width / 2, width / 2), width / 4, 10, 400));\n\n  const polys = [\n    makePolygon(6, v2(300, 100), 15),\n    makePolygon(3, v2(400, 100), 15),\n    makePolygon(4, v2(600, 100), 15),\n  ];\n\n  polys.forEach(poly => {\n    circles.push(...poly.circles);\n    constraints.push(...poly.constraints);\n    lines.push(...poly.lines);\n  });\n\n  let running = true;\n  scihalt(() => (running = false));\n\n  (function step() {\n    const dt = 16;\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n\n      if (circle.mass > 0) {\n        add(circle.acel, circle.acel, v2(0, GRAVITY));\n      }\n\n      accelerate(circle, dt);\n    }\n\n    for (let i = 0; i < CONSTRAINT_ITERS; i++) {\n      for (let j = 0; j < constraints.length; j++) {\n        const constraint = constraints[j];\n        solveDistanceConstraint(\n          constraint.point1,\n          constraint.point1.mass,\n          constraint.point2,\n          constraint.point2.mass,\n          constraint.goal,\n          1\n        );\n      }\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const lineIsBounds = bucket.indexOf(line) > -1;\n      for (let j = 0; j < circles.length; j++) {\n        const circle = circles[j];\n        if (circle === line.point1 || circle === line.point2) continue;\n        // TODO: this needs to be smarter. Without this rewind, simple circles\n        // will tunnel through the line. But if done indiscriminately, the rewind\n        // will cause an infinite build up of velocity, and eventually explode. OR\n        // it will cause a circle to \"stick\" to an edge until their velocity\n        // dissipates.\n        if (!lineIsBounds) {\n          rewindToCollisionPoint(circle, circle.radius, line.point1, line.point2);\n        }\n        \n        collideCircleEdge(\n          circle,\n          circle.radius,\n          circle.mass,\n          line.point1,\n          line.point1.mass,\n          line.point2,\n          line.point2.mass,\n          false,\n          0.9\n        );\n      }\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const a = circles[i];\n      for (let j = i + 1; j < circles.length; j++) {\n        const b = circles[j];\n        if (\n          !overlapCircleCircle(\n            a.cpos.x,\n            a.cpos.y,\n            a.radius,\n            b.cpos.x,\n            b.cpos.y,\n            b.radius\n          )\n        )\n          continue;\n        collideCircleCircle(\n          a,\n          a.radius,\n          a.mass,\n          b,\n          b.radius,\n          b.mass,\n          false,\n          0.9\n        );\n      }\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n      inertia(circle);\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      for (let j = 0; j < circles.length; j++) {\n        const circle = circles[j];\n        if (circle === line.point1 || circle === line.point2) continue;\n        collideCircleEdge(\n          circle,\n          circle.radius,\n          circle.mass,\n          line.point1,\n          line.point1.mass,\n          line.point2,\n          line.point2.mass,\n          true,\n          0.9\n        );\n      }\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const a = circles[i];\n      for (let j = i + 1; j < circles.length; j++) {\n        const b = circles[j];\n        if (\n          !overlapCircleCircle(\n            a.cpos.x,\n            a.cpos.y,\n            a.radius,\n            b.cpos.x,\n            b.cpos.y,\n            b.radius\n          )\n        )\n          continue;\n        collideCircleCircle(\n          a,\n          a.radius,\n          a.mass,\n          b,\n          b.radius,\n          b.mass,\n          true,\n          0.9\n        );\n      }\n    }\n\n    // Ensure nothing actually gets out of the bucket.\n    // It's impossible to keep everything in the bucket without a strict\n    // normal for each edge, because you need to know which \"side\" of the edge\n    // the particle is on. Additionally, the solver steps above can easily move\n    // a circle to a non-intersecting position that is beyond the \"knowledge\" of\n    // anything checking for collisions with edges. This is especially common\n    // when lots of collisions are being resolved.\n    for (let i = 0; i < bucket.length; i++) {\n      const line = bucket[i];\n      // HACK: Don't use the midline collection for bounds checking.\n      // The right way to do this is to create systems.\n      if (line === midLine[0]) continue;\n\n      for (let j = 0; j < circles.length; j++) {\n        const circle = circles[j];\n\n        const projection: PointEdgeProjection = {\n          distance: Number.MIN_SAFE_INTEGER,\n          similarity: 0,\n          u: Number.MIN_SAFE_INTEGER,\n          projectedPoint: v2(),\n          edgeNormal: v2(),\n        };\n\n        // We know which way the edges were wound, so we implicitly know which order\n        // these points should be used in to compute the normal.\n        projectPointEdge(circle.cpos, line.point1.cpos, line.point2.cpos, projection);\n\n        // both the edge normal and the segment from edge to circle are\n        // facing a similar direction\n        // We only know it is > 0 because of the order line.point,point2 were inputted\n        // into the projection.\n        if (projection.similarity > 0) continue;\n\n        // If we get here, the directions so dissimilar that the circle must\n        // be on the other side of the edge! Move it back!\n        const offset = v2();\n        sub(offset, projection.projectedPoint, circle.cpos);\n        add(circle.cpos, circle.cpos, offset);\n        // Don't correct ppos, otherwise velocity will continue to increase\n        // forever.\n        // add(circle.ppos, circle.ppos, offset);\n      }\n    }\n\n    render(circles, lines, constraints, ctx);\n    if (!running) return;\n    window.requestAnimationFrame(step);\n  })();\n\n  function makeStaticMesh(points: Vector2[]) {\n    const clines: CollidableLine[] = [];\n    const circles: CollidableCircle[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      const prev = circles.length === 0 ? null : circles[i - 1];\n      const circle = {\n        cpos: copy(v2(), point),\n        ppos: copy(v2(), point),\n        acel: v2(0, 0),\n        mass: -1,\n        radius: 1\n      };\n      if (prev) {\n        const line = {\n          point1: prev,\n          point2: circle\n        };\n        clines.push(line);\n      }\n      circles.push(circle);\n    }\n\n    clines.push({\n      point1: circles[circles.length - 1],\n      point2: circles[0]\n    });\n\n    return clines;\n  }\n\n  function makeCircles(\n    center: Vector2,\n    spawnRadius: number,\n    baseRadius: number,\n    num: number\n  ): CollidableCircle[] {\n    const all = [];\n    const minRadius = 10;\n    for (let i = 0; i < num; i++) {\n      const x = center.x + Math.cos(i) * spawnRadius;\n      const y = center.y + Math.sin(i) * spawnRadius;\n      all.push({\n        cpos: { x, y },\n        ppos: { x, y },\n        acel: { x: 0, y: 0 },\n        radius: Math.max(\n          Math.abs(Math.cos(i) + Math.sin(i)) * baseRadius,\n          minRadius\n        ),\n        mass: Math.max(Math.abs(Math.cos(i) + Math.sin(i)) * 1, 1)\n      });\n    }\n    return all;\n  }\n\n  function makePolygon(gon: number, center: Vector2, radius: number) {\n    const clines: CollidableLine[] = [];\n    const circles: CollidableCircle[] = [];\n    const constraints: DistanceConstraint[] = [];\n    for (let i = 0; i < gon; i++) {\n      const x = center.x + Math.cos((i / gon) * Math.PI * 2) * radius;\n      const y = center.y + Math.sin((i / gon) * Math.PI * 2) * radius;\n      circles.push({\n        cpos: { x, y },\n        ppos: { x, y },\n        acel: { x: 0, y: 0 },\n        radius: 5,\n        mass: 5\n      });\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const point1 = circles[i];\n      const point2 = i === circles.length - 1 ? circles[0] : circles[i + 1];\n      clines.push({\n        point1,\n        point2\n      });\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const point1 = circles[i];\n      let j = i;\n      while (true) {\n        j++;\n        const point2 = circles[j % circles.length];\n        if (point2 === point1) break;\n        if (\n          constraints.find(\n            c =>\n              (c.point1 === point1 && c.point2 === point2) ||\n              (c.point2 === point1 && c.point1 === point2)\n          ) !== undefined\n        )\n          break;\n        constraints.push({\n          point1,\n          point2,\n          goal: distance(point1.cpos, point2.cpos)\n        });\n      }\n    }\n\n    return {\n      circles,\n      lines: clines,\n      constraints\n    };\n  }\n\n  function render(\n    circles: CollidableCircle[],\n    segments: CollidableLine[],\n    constraints: DistanceConstraint[],\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (let i = 0; i < circles.length; i++) {\n      const point = circles[i];\n\n      ctx.fillStyle = \"red\";\n      ctx.beginPath();\n      ctx.arc(point.ppos.x, point.ppos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n\n      ctx.fillStyle = \"black\";\n      ctx.beginPath();\n      ctx.arc(point.cpos.x, point.cpos.y, point.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      ctx.strokeStyle = \"red\";\n      ctx.beginPath();\n      ctx.moveTo(segment.point1.ppos.x, segment.point1.ppos.y);\n      ctx.lineTo(segment.point2.ppos.x, segment.point2.ppos.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.strokeStyle = \"black\";\n      ctx.moveTo(segment.point1.cpos.x, segment.point1.cpos.y);\n      ctx.lineTo(segment.point2.cpos.x, segment.point2.cpos.y);\n      ctx.stroke();\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      const c = constraints[i];\n      ctx.strokeStyle = \"magenta\";\n      ctx.beginPath();\n      ctx.moveTo(c.point1.ppos.x, c.point1.ppos.y);\n      ctx.lineTo(c.point2.ppos.x, c.point2.ppos.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.strokeStyle = \"purple\";\n      ctx.moveTo(c.point1.cpos.x, c.point1.cpos.y);\n      ctx.lineTo(c.point2.cpos.x, c.point2.cpos.y);\n      ctx.stroke();\n    }\n  }\n};\n","import * as AABBOverlapDemo from \"./aabb-overlap\";\nimport * as AABBSoupDemo from \"./aabb-soup\";\nimport * as CircleCollisions from \"./circle-collisions\";\nimport * as CircleBoxCollision from \"./circle-box-collision\";\nimport * as EdgeCollision from \"./edge-collision\";\nimport * as Platformer from \"./platformer\";\nimport * as Bucket from \"./bucket\";\n\nconst qs = new URLSearchParams(window.location.search);\nconst demoName = qs.get(\"demo\");\n\nconst demos = new Map<string, { start: () => void; stop?: () => void }>([\n  [\"Bucket of Circles (Verlet)\", Bucket],\n  [\"Circle Collisions (Verlet)\", CircleCollisions],\n  [\"Circle to Box Collision (Verlet)\", CircleBoxCollision],\n  [\"Single Edge Collision (Verlet)\", EdgeCollision],\n  [\"Platformer (AABB Impulse Model)\", Platformer],\n  [\"AABB Overlap Demo (AABB Impulse Model)\", AABBOverlapDemo],\n  [\"AABB Soup Demo (AABB Impulse Model)\", AABBSoupDemo]\n]);\n\nif (demoName && demos.has(demoName)) {\n  demos.get(demoName)!.start();\n} else {\n  const names = Array.from(demos.keys());\n\n  const li = (name: string) => {\n    const cmp = encodeURIComponent(name);\n    const url = `${window.location.pathname}?demo=${cmp}`;\n    return `\n      <li><a href=\"${url}\">${name}</a></li>\n    `;\n  };\n\n  const html = `\n    <ul>\n      ${names.map(name => li(name)).join(\"\\n\")}\n    </ul>\n  `;\n  const el = document.createElement(\"div\");\n  el.innerHTML = html;\n  document.body.appendChild(el);\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}